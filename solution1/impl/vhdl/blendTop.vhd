-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity blendTop is
port (
    p_pyrLA0_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    p_pyrLA0_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA0_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA0_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA0_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA0_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA1_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    p_pyrLA1_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA1_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA1_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA1_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLA1_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB0_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    p_pyrLB0_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB0_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB0_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB0_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB0_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB1_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    p_pyrLB1_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB1_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB1_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB1_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrLB1_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS0_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_pyrS0_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS0_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS0_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS0_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS0_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS0_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS1_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_pyrS1_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS1_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS1_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS1_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS1_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_pyrS1_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    p_pyrLA0_TVALID : IN STD_LOGIC;
    p_pyrLA0_TREADY : OUT STD_LOGIC;
    p_pyrLA1_TVALID : IN STD_LOGIC;
    p_pyrLA1_TREADY : OUT STD_LOGIC;
    p_pyrLB0_TVALID : IN STD_LOGIC;
    p_pyrLB0_TREADY : OUT STD_LOGIC;
    p_pyrLB1_TVALID : IN STD_LOGIC;
    p_pyrLB1_TREADY : OUT STD_LOGIC;
    p_pyrS0_TVALID : OUT STD_LOGIC;
    p_pyrS0_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    p_pyrS1_TVALID : OUT STD_LOGIC;
    p_pyrS1_TREADY : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of blendTop is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "blendTop,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=10.400000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=20,HLS_SYN_DSP=146,HLS_SYN_FF=20858,HLS_SYN_LUT=29918,HLS_VERSION=2019_1}";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_proc_U0_ap_start : STD_LOGIC;
    signal Block_proc_U0_ap_done : STD_LOGIC;
    signal Block_proc_U0_ap_continue : STD_LOGIC;
    signal Block_proc_U0_ap_idle : STD_LOGIC;
    signal Block_proc_U0_ap_ready : STD_LOGIC;
    signal Block_proc_U0_start_out : STD_LOGIC;
    signal Block_proc_U0_start_write : STD_LOGIC;
    signal Block_proc_U0_pyrLA0_rows_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal Block_proc_U0_pyrLA0_rows_out_write : STD_LOGIC;
    signal Block_proc_U0_pyrLA0_cols_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal Block_proc_U0_pyrLA0_cols_out_write : STD_LOGIC;
    signal Block_proc_U0_pyrLA1_rows_out_din : STD_LOGIC_VECTOR (8 downto 0);
    signal Block_proc_U0_pyrLA1_rows_out_write : STD_LOGIC;
    signal Block_proc_U0_pyrLA1_rows_out1_din : STD_LOGIC_VECTOR (8 downto 0);
    signal Block_proc_U0_pyrLA1_rows_out1_write : STD_LOGIC;
    signal Block_proc_U0_pyrLA1_cols_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal Block_proc_U0_pyrLA1_cols_out_write : STD_LOGIC;
    signal Block_proc_U0_pyrLA1_cols_out2_din : STD_LOGIC_VECTOR (9 downto 0);
    signal Block_proc_U0_pyrLA1_cols_out2_write : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_ap_start : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_ap_done : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_p_pyrLA0_TREADY : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_img_rows_read : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_img_cols_read : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_img_data_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2xfMat84_U0_img_data_V_write : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_img_rows_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal AXIvideo2xfMat84_U0_img_rows_out_write : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_img_cols_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal AXIvideo2xfMat84_U0_img_cols_out_write : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_ap_start : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_ap_done : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_p_pyrLA1_TREADY : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_img_rows_read : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_img_cols_read : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_img_data_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2xfMat85_U0_img_data_V_write : STD_LOGIC;
    signal AXIvideo2xfMat86_U0_ap_start : STD_LOGIC;
    signal AXIvideo2xfMat86_U0_ap_done : STD_LOGIC;
    signal AXIvideo2xfMat86_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2xfMat86_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2xfMat86_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat86_U0_p_pyrLB0_TREADY : STD_LOGIC;
    signal AXIvideo2xfMat86_U0_img_data_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2xfMat86_U0_img_data_V_write : STD_LOGIC;
    signal AXIvideo2xfMat_U0_ap_start : STD_LOGIC;
    signal AXIvideo2xfMat_U0_ap_done : STD_LOGIC;
    signal AXIvideo2xfMat_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2xfMat_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2xfMat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat_U0_p_pyrLB1_TREADY : STD_LOGIC;
    signal AXIvideo2xfMat_U0_img_data_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2xfMat_U0_img_data_V_write : STD_LOGIC;
    signal blendL_U0_ap_start : STD_LOGIC;
    signal blendL_U0_start_full_n : STD_LOGIC;
    signal blendL_U0_start_out : STD_LOGIC;
    signal blendL_U0_start_write : STD_LOGIC;
    signal blendL_U0_pyrLA0_rows_read : STD_LOGIC;
    signal blendL_U0_pyrLA0_cols_read : STD_LOGIC;
    signal blendL_U0_pyrLA0_data_V_read : STD_LOGIC;
    signal blendL_U0_pyrLA1_rows_read : STD_LOGIC;
    signal blendL_U0_pyrLA1_cols_read : STD_LOGIC;
    signal blendL_U0_pyrLA1_data_V_read : STD_LOGIC;
    signal blendL_U0_pyrLB0_data_V_read : STD_LOGIC;
    signal blendL_U0_pyrLB1_data_V_read : STD_LOGIC;
    signal blendL_U0_pyrS0_data_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal blendL_U0_pyrS0_data_V_write : STD_LOGIC;
    signal blendL_U0_pyrS1_data_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal blendL_U0_pyrS1_data_V_write : STD_LOGIC;
    signal blendL_U0_ap_done : STD_LOGIC;
    signal blendL_U0_ap_ready : STD_LOGIC;
    signal blendL_U0_ap_idle : STD_LOGIC;
    signal blendL_U0_ap_continue : STD_LOGIC;
    signal xfMat2AXIvideo87_U0_ap_start : STD_LOGIC;
    signal xfMat2AXIvideo87_U0_ap_done : STD_LOGIC;
    signal xfMat2AXIvideo87_U0_ap_continue : STD_LOGIC;
    signal xfMat2AXIvideo87_U0_ap_idle : STD_LOGIC;
    signal xfMat2AXIvideo87_U0_ap_ready : STD_LOGIC;
    signal xfMat2AXIvideo87_U0_img_data_V_read : STD_LOGIC;
    signal xfMat2AXIvideo87_U0_p_pyrS0_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal xfMat2AXIvideo87_U0_p_pyrS0_TVALID : STD_LOGIC;
    signal xfMat2AXIvideo87_U0_p_pyrS0_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo87_U0_p_pyrS0_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo87_U0_p_pyrS0_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo87_U0_p_pyrS0_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo87_U0_p_pyrS0_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo87_U0_p_pyrS0_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal xfMat2AXIvideo_U0_ap_start : STD_LOGIC;
    signal xfMat2AXIvideo_U0_ap_done : STD_LOGIC;
    signal xfMat2AXIvideo_U0_ap_continue : STD_LOGIC;
    signal xfMat2AXIvideo_U0_ap_idle : STD_LOGIC;
    signal xfMat2AXIvideo_U0_ap_ready : STD_LOGIC;
    signal xfMat2AXIvideo_U0_img_data_V_read : STD_LOGIC;
    signal xfMat2AXIvideo_U0_p_pyrS1_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal xfMat2AXIvideo_U0_p_pyrS1_TVALID : STD_LOGIC;
    signal xfMat2AXIvideo_U0_p_pyrS1_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_U0_p_pyrS1_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_U0_p_pyrS1_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_U0_p_pyrS1_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_U0_p_pyrS1_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_U0_p_pyrS1_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal pyrLA0_rows_c_full_n : STD_LOGIC;
    signal pyrLA0_rows_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal pyrLA0_rows_c_empty_n : STD_LOGIC;
    signal pyrLA0_cols_c_full_n : STD_LOGIC;
    signal pyrLA0_cols_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal pyrLA0_cols_c_empty_n : STD_LOGIC;
    signal pyrLA1_rows_c_full_n : STD_LOGIC;
    signal pyrLA1_rows_c_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal pyrLA1_rows_c_empty_n : STD_LOGIC;
    signal pyrLA1_rows_c4_full_n : STD_LOGIC;
    signal pyrLA1_rows_c4_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal pyrLA1_rows_c4_empty_n : STD_LOGIC;
    signal pyrLA1_cols_c_full_n : STD_LOGIC;
    signal pyrLA1_cols_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal pyrLA1_cols_c_empty_n : STD_LOGIC;
    signal pyrLA1_cols_c5_full_n : STD_LOGIC;
    signal pyrLA1_cols_c5_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal pyrLA1_cols_c5_empty_n : STD_LOGIC;
    signal pyrLA0_data_V_full_n : STD_LOGIC;
    signal pyrLA0_data_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pyrLA0_data_V_empty_n : STD_LOGIC;
    signal pyrLA0_rows_c6_full_n : STD_LOGIC;
    signal pyrLA0_rows_c6_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal pyrLA0_rows_c6_empty_n : STD_LOGIC;
    signal pyrLA0_cols_c7_full_n : STD_LOGIC;
    signal pyrLA0_cols_c7_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal pyrLA0_cols_c7_empty_n : STD_LOGIC;
    signal pyrLA1_data_V_full_n : STD_LOGIC;
    signal pyrLA1_data_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pyrLA1_data_V_empty_n : STD_LOGIC;
    signal pyrLB0_data_V_full_n : STD_LOGIC;
    signal pyrLB0_data_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pyrLB0_data_V_empty_n : STD_LOGIC;
    signal pyrLB1_data_V_full_n : STD_LOGIC;
    signal pyrLB1_data_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pyrLB1_data_V_empty_n : STD_LOGIC;
    signal pyrS0_data_V_full_n : STD_LOGIC;
    signal pyrS0_data_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pyrS0_data_V_empty_n : STD_LOGIC;
    signal pyrS1_data_V_full_n : STD_LOGIC;
    signal pyrS1_data_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pyrS1_data_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_Block_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_proc_U0_ap_ready : STD_LOGIC;
    signal Block_proc_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_AXIvideo2xfMat84_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2xfMat84_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_AXIvideo2xfMat85_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2xfMat85_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_AXIvideo2xfMat86_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2xfMat86_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat86_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_AXIvideo2xfMat_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2xfMat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal start_for_blendL_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_blendL_U0_full_n : STD_LOGIC;
    signal start_for_blendL_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_blendL_U0_empty_n : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_start_full_n : STD_LOGIC;
    signal AXIvideo2xfMat84_U0_start_write : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_start_full_n : STD_LOGIC;
    signal AXIvideo2xfMat85_U0_start_write : STD_LOGIC;
    signal AXIvideo2xfMat86_U0_start_full_n : STD_LOGIC;
    signal AXIvideo2xfMat86_U0_start_write : STD_LOGIC;
    signal AXIvideo2xfMat_U0_start_full_n : STD_LOGIC;
    signal AXIvideo2xfMat_U0_start_write : STD_LOGIC;
    signal start_for_xfMat2AXIvideo87_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2AXIvideo87_U0_full_n : STD_LOGIC;
    signal start_for_xfMat2AXIvideo87_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2AXIvideo87_U0_empty_n : STD_LOGIC;
    signal start_for_xfMat2AXIvideo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2AXIvideo_U0_full_n : STD_LOGIC;
    signal start_for_xfMat2AXIvideo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2AXIvideo_U0_empty_n : STD_LOGIC;
    signal xfMat2AXIvideo87_U0_start_full_n : STD_LOGIC;
    signal xfMat2AXIvideo87_U0_start_write : STD_LOGIC;
    signal xfMat2AXIvideo_U0_start_full_n : STD_LOGIC;
    signal xfMat2AXIvideo_U0_start_write : STD_LOGIC;

    component Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        pyrLA0_rows_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        pyrLA0_rows_out_full_n : IN STD_LOGIC;
        pyrLA0_rows_out_write : OUT STD_LOGIC;
        pyrLA0_cols_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        pyrLA0_cols_out_full_n : IN STD_LOGIC;
        pyrLA0_cols_out_write : OUT STD_LOGIC;
        pyrLA1_rows_out_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        pyrLA1_rows_out_full_n : IN STD_LOGIC;
        pyrLA1_rows_out_write : OUT STD_LOGIC;
        pyrLA1_rows_out1_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        pyrLA1_rows_out1_full_n : IN STD_LOGIC;
        pyrLA1_rows_out1_write : OUT STD_LOGIC;
        pyrLA1_cols_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        pyrLA1_cols_out_full_n : IN STD_LOGIC;
        pyrLA1_cols_out_write : OUT STD_LOGIC;
        pyrLA1_cols_out2_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        pyrLA1_cols_out2_full_n : IN STD_LOGIC;
        pyrLA1_cols_out2_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2xfMat84 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_pyrLA0_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        p_pyrLA0_TVALID : IN STD_LOGIC;
        p_pyrLA0_TREADY : OUT STD_LOGIC;
        p_pyrLA0_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLA0_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLA0_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLA0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLA0_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLA0_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_rows_empty_n : IN STD_LOGIC;
        img_rows_read : OUT STD_LOGIC;
        img_cols_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        img_cols_empty_n : IN STD_LOGIC;
        img_cols_read : OUT STD_LOGIC;
        img_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_V_full_n : IN STD_LOGIC;
        img_data_V_write : OUT STD_LOGIC;
        img_rows_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_rows_out_full_n : IN STD_LOGIC;
        img_rows_out_write : OUT STD_LOGIC;
        img_cols_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        img_cols_out_full_n : IN STD_LOGIC;
        img_cols_out_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2xfMat85 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_pyrLA1_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        p_pyrLA1_TVALID : IN STD_LOGIC;
        p_pyrLA1_TREADY : OUT STD_LOGIC;
        p_pyrLA1_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLA1_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLA1_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLA1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLA1_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLA1_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        img_rows_empty_n : IN STD_LOGIC;
        img_rows_read : OUT STD_LOGIC;
        img_cols_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_cols_empty_n : IN STD_LOGIC;
        img_cols_read : OUT STD_LOGIC;
        img_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_V_full_n : IN STD_LOGIC;
        img_data_V_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2xfMat86 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_pyrLB0_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        p_pyrLB0_TVALID : IN STD_LOGIC;
        p_pyrLB0_TREADY : OUT STD_LOGIC;
        p_pyrLB0_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLB0_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLB0_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLB0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLB0_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLB0_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_V_full_n : IN STD_LOGIC;
        img_data_V_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2xfMat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_pyrLB1_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        p_pyrLB1_TVALID : IN STD_LOGIC;
        p_pyrLB1_TREADY : OUT STD_LOGIC;
        p_pyrLB1_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLB1_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLB1_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLB1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLB1_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        p_pyrLB1_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_V_full_n : IN STD_LOGIC;
        img_data_V_write : OUT STD_LOGIC );
    end component;


    component blendL IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        pyrLA0_rows_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        pyrLA0_rows_empty_n : IN STD_LOGIC;
        pyrLA0_rows_read : OUT STD_LOGIC;
        pyrLA0_cols_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        pyrLA0_cols_empty_n : IN STD_LOGIC;
        pyrLA0_cols_read : OUT STD_LOGIC;
        pyrLA0_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        pyrLA0_data_V_empty_n : IN STD_LOGIC;
        pyrLA0_data_V_read : OUT STD_LOGIC;
        pyrLA1_rows_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        pyrLA1_rows_empty_n : IN STD_LOGIC;
        pyrLA1_rows_read : OUT STD_LOGIC;
        pyrLA1_cols_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        pyrLA1_cols_empty_n : IN STD_LOGIC;
        pyrLA1_cols_read : OUT STD_LOGIC;
        pyrLA1_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        pyrLA1_data_V_empty_n : IN STD_LOGIC;
        pyrLA1_data_V_read : OUT STD_LOGIC;
        pyrLB0_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        pyrLB0_data_V_empty_n : IN STD_LOGIC;
        pyrLB0_data_V_read : OUT STD_LOGIC;
        pyrLB1_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        pyrLB1_data_V_empty_n : IN STD_LOGIC;
        pyrLB1_data_V_read : OUT STD_LOGIC;
        pyrS0_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        pyrS0_data_V_full_n : IN STD_LOGIC;
        pyrS0_data_V_write : OUT STD_LOGIC;
        pyrS1_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        pyrS1_data_V_full_n : IN STD_LOGIC;
        pyrS1_data_V_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component xfMat2AXIvideo87 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_V_empty_n : IN STD_LOGIC;
        img_data_V_read : OUT STD_LOGIC;
        p_pyrS0_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_pyrS0_TVALID : OUT STD_LOGIC;
        p_pyrS0_TREADY : IN STD_LOGIC;
        p_pyrS0_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_pyrS0_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_pyrS0_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_pyrS0_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_pyrS0_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_pyrS0_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component xfMat2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_V_empty_n : IN STD_LOGIC;
        img_data_V_read : OUT STD_LOGIC;
        p_pyrS1_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_pyrS1_TVALID : OUT STD_LOGIC;
        p_pyrS1_TREADY : IN STD_LOGIC;
        p_pyrS1_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_pyrS1_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_pyrS1_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_pyrS1_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_pyrS1_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_pyrS1_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fifo_w10_d2_A_x1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w11_d2_A_x0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w9_d2_A_x0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w9_d3_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w10_d3_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_blendL_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_xfMat2AIfE IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_xfMat2AJfO IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Block_proc_U0 : component Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc_U0_ap_start,
        start_full_n => start_for_blendL_U0_full_n,
        ap_done => Block_proc_U0_ap_done,
        ap_continue => Block_proc_U0_ap_continue,
        ap_idle => Block_proc_U0_ap_idle,
        ap_ready => Block_proc_U0_ap_ready,
        start_out => Block_proc_U0_start_out,
        start_write => Block_proc_U0_start_write,
        pyrLA0_rows_out_din => Block_proc_U0_pyrLA0_rows_out_din,
        pyrLA0_rows_out_full_n => pyrLA0_rows_c_full_n,
        pyrLA0_rows_out_write => Block_proc_U0_pyrLA0_rows_out_write,
        pyrLA0_cols_out_din => Block_proc_U0_pyrLA0_cols_out_din,
        pyrLA0_cols_out_full_n => pyrLA0_cols_c_full_n,
        pyrLA0_cols_out_write => Block_proc_U0_pyrLA0_cols_out_write,
        pyrLA1_rows_out_din => Block_proc_U0_pyrLA1_rows_out_din,
        pyrLA1_rows_out_full_n => pyrLA1_rows_c_full_n,
        pyrLA1_rows_out_write => Block_proc_U0_pyrLA1_rows_out_write,
        pyrLA1_rows_out1_din => Block_proc_U0_pyrLA1_rows_out1_din,
        pyrLA1_rows_out1_full_n => pyrLA1_rows_c4_full_n,
        pyrLA1_rows_out1_write => Block_proc_U0_pyrLA1_rows_out1_write,
        pyrLA1_cols_out_din => Block_proc_U0_pyrLA1_cols_out_din,
        pyrLA1_cols_out_full_n => pyrLA1_cols_c_full_n,
        pyrLA1_cols_out_write => Block_proc_U0_pyrLA1_cols_out_write,
        pyrLA1_cols_out2_din => Block_proc_U0_pyrLA1_cols_out2_din,
        pyrLA1_cols_out2_full_n => pyrLA1_cols_c5_full_n,
        pyrLA1_cols_out2_write => Block_proc_U0_pyrLA1_cols_out2_write);

    AXIvideo2xfMat84_U0 : component AXIvideo2xfMat84
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2xfMat84_U0_ap_start,
        ap_done => AXIvideo2xfMat84_U0_ap_done,
        ap_continue => AXIvideo2xfMat84_U0_ap_continue,
        ap_idle => AXIvideo2xfMat84_U0_ap_idle,
        ap_ready => AXIvideo2xfMat84_U0_ap_ready,
        p_pyrLA0_TDATA => p_pyrLA0_TDATA,
        p_pyrLA0_TVALID => p_pyrLA0_TVALID,
        p_pyrLA0_TREADY => AXIvideo2xfMat84_U0_p_pyrLA0_TREADY,
        p_pyrLA0_TKEEP => p_pyrLA0_TKEEP,
        p_pyrLA0_TSTRB => p_pyrLA0_TSTRB,
        p_pyrLA0_TUSER => p_pyrLA0_TUSER,
        p_pyrLA0_TLAST => p_pyrLA0_TLAST,
        p_pyrLA0_TID => p_pyrLA0_TID,
        p_pyrLA0_TDEST => p_pyrLA0_TDEST,
        img_rows_dout => pyrLA0_rows_c_dout,
        img_rows_empty_n => pyrLA0_rows_c_empty_n,
        img_rows_read => AXIvideo2xfMat84_U0_img_rows_read,
        img_cols_dout => pyrLA0_cols_c_dout,
        img_cols_empty_n => pyrLA0_cols_c_empty_n,
        img_cols_read => AXIvideo2xfMat84_U0_img_cols_read,
        img_data_V_din => AXIvideo2xfMat84_U0_img_data_V_din,
        img_data_V_full_n => pyrLA0_data_V_full_n,
        img_data_V_write => AXIvideo2xfMat84_U0_img_data_V_write,
        img_rows_out_din => AXIvideo2xfMat84_U0_img_rows_out_din,
        img_rows_out_full_n => pyrLA0_rows_c6_full_n,
        img_rows_out_write => AXIvideo2xfMat84_U0_img_rows_out_write,
        img_cols_out_din => AXIvideo2xfMat84_U0_img_cols_out_din,
        img_cols_out_full_n => pyrLA0_cols_c7_full_n,
        img_cols_out_write => AXIvideo2xfMat84_U0_img_cols_out_write);

    AXIvideo2xfMat85_U0 : component AXIvideo2xfMat85
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2xfMat85_U0_ap_start,
        ap_done => AXIvideo2xfMat85_U0_ap_done,
        ap_continue => AXIvideo2xfMat85_U0_ap_continue,
        ap_idle => AXIvideo2xfMat85_U0_ap_idle,
        ap_ready => AXIvideo2xfMat85_U0_ap_ready,
        p_pyrLA1_TDATA => p_pyrLA1_TDATA,
        p_pyrLA1_TVALID => p_pyrLA1_TVALID,
        p_pyrLA1_TREADY => AXIvideo2xfMat85_U0_p_pyrLA1_TREADY,
        p_pyrLA1_TKEEP => p_pyrLA1_TKEEP,
        p_pyrLA1_TSTRB => p_pyrLA1_TSTRB,
        p_pyrLA1_TUSER => p_pyrLA1_TUSER,
        p_pyrLA1_TLAST => p_pyrLA1_TLAST,
        p_pyrLA1_TID => p_pyrLA1_TID,
        p_pyrLA1_TDEST => p_pyrLA1_TDEST,
        img_rows_dout => pyrLA1_rows_c_dout,
        img_rows_empty_n => pyrLA1_rows_c_empty_n,
        img_rows_read => AXIvideo2xfMat85_U0_img_rows_read,
        img_cols_dout => pyrLA1_cols_c_dout,
        img_cols_empty_n => pyrLA1_cols_c_empty_n,
        img_cols_read => AXIvideo2xfMat85_U0_img_cols_read,
        img_data_V_din => AXIvideo2xfMat85_U0_img_data_V_din,
        img_data_V_full_n => pyrLA1_data_V_full_n,
        img_data_V_write => AXIvideo2xfMat85_U0_img_data_V_write);

    AXIvideo2xfMat86_U0 : component AXIvideo2xfMat86
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2xfMat86_U0_ap_start,
        ap_done => AXIvideo2xfMat86_U0_ap_done,
        ap_continue => AXIvideo2xfMat86_U0_ap_continue,
        ap_idle => AXIvideo2xfMat86_U0_ap_idle,
        ap_ready => AXIvideo2xfMat86_U0_ap_ready,
        p_pyrLB0_TDATA => p_pyrLB0_TDATA,
        p_pyrLB0_TVALID => p_pyrLB0_TVALID,
        p_pyrLB0_TREADY => AXIvideo2xfMat86_U0_p_pyrLB0_TREADY,
        p_pyrLB0_TKEEP => p_pyrLB0_TKEEP,
        p_pyrLB0_TSTRB => p_pyrLB0_TSTRB,
        p_pyrLB0_TUSER => p_pyrLB0_TUSER,
        p_pyrLB0_TLAST => p_pyrLB0_TLAST,
        p_pyrLB0_TID => p_pyrLB0_TID,
        p_pyrLB0_TDEST => p_pyrLB0_TDEST,
        img_data_V_din => AXIvideo2xfMat86_U0_img_data_V_din,
        img_data_V_full_n => pyrLB0_data_V_full_n,
        img_data_V_write => AXIvideo2xfMat86_U0_img_data_V_write);

    AXIvideo2xfMat_U0 : component AXIvideo2xfMat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2xfMat_U0_ap_start,
        ap_done => AXIvideo2xfMat_U0_ap_done,
        ap_continue => AXIvideo2xfMat_U0_ap_continue,
        ap_idle => AXIvideo2xfMat_U0_ap_idle,
        ap_ready => AXIvideo2xfMat_U0_ap_ready,
        p_pyrLB1_TDATA => p_pyrLB1_TDATA,
        p_pyrLB1_TVALID => p_pyrLB1_TVALID,
        p_pyrLB1_TREADY => AXIvideo2xfMat_U0_p_pyrLB1_TREADY,
        p_pyrLB1_TKEEP => p_pyrLB1_TKEEP,
        p_pyrLB1_TSTRB => p_pyrLB1_TSTRB,
        p_pyrLB1_TUSER => p_pyrLB1_TUSER,
        p_pyrLB1_TLAST => p_pyrLB1_TLAST,
        p_pyrLB1_TID => p_pyrLB1_TID,
        p_pyrLB1_TDEST => p_pyrLB1_TDEST,
        img_data_V_din => AXIvideo2xfMat_U0_img_data_V_din,
        img_data_V_full_n => pyrLB1_data_V_full_n,
        img_data_V_write => AXIvideo2xfMat_U0_img_data_V_write);

    blendL_U0 : component blendL
    port map (
        ap_start => blendL_U0_ap_start,
        start_full_n => blendL_U0_start_full_n,
        start_out => blendL_U0_start_out,
        start_write => blendL_U0_start_write,
        pyrLA0_rows_dout => pyrLA0_rows_c6_dout,
        pyrLA0_rows_empty_n => pyrLA0_rows_c6_empty_n,
        pyrLA0_rows_read => blendL_U0_pyrLA0_rows_read,
        pyrLA0_cols_dout => pyrLA0_cols_c7_dout,
        pyrLA0_cols_empty_n => pyrLA0_cols_c7_empty_n,
        pyrLA0_cols_read => blendL_U0_pyrLA0_cols_read,
        pyrLA0_data_V_dout => pyrLA0_data_V_dout,
        pyrLA0_data_V_empty_n => pyrLA0_data_V_empty_n,
        pyrLA0_data_V_read => blendL_U0_pyrLA0_data_V_read,
        pyrLA1_rows_dout => pyrLA1_rows_c4_dout,
        pyrLA1_rows_empty_n => pyrLA1_rows_c4_empty_n,
        pyrLA1_rows_read => blendL_U0_pyrLA1_rows_read,
        pyrLA1_cols_dout => pyrLA1_cols_c5_dout,
        pyrLA1_cols_empty_n => pyrLA1_cols_c5_empty_n,
        pyrLA1_cols_read => blendL_U0_pyrLA1_cols_read,
        pyrLA1_data_V_dout => pyrLA1_data_V_dout,
        pyrLA1_data_V_empty_n => pyrLA1_data_V_empty_n,
        pyrLA1_data_V_read => blendL_U0_pyrLA1_data_V_read,
        pyrLB0_data_V_dout => pyrLB0_data_V_dout,
        pyrLB0_data_V_empty_n => pyrLB0_data_V_empty_n,
        pyrLB0_data_V_read => blendL_U0_pyrLB0_data_V_read,
        pyrLB1_data_V_dout => pyrLB1_data_V_dout,
        pyrLB1_data_V_empty_n => pyrLB1_data_V_empty_n,
        pyrLB1_data_V_read => blendL_U0_pyrLB1_data_V_read,
        pyrS0_data_V_din => blendL_U0_pyrS0_data_V_din,
        pyrS0_data_V_full_n => pyrS0_data_V_full_n,
        pyrS0_data_V_write => blendL_U0_pyrS0_data_V_write,
        pyrS1_data_V_din => blendL_U0_pyrS1_data_V_din,
        pyrS1_data_V_full_n => pyrS1_data_V_full_n,
        pyrS1_data_V_write => blendL_U0_pyrS1_data_V_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_done => blendL_U0_ap_done,
        ap_ready => blendL_U0_ap_ready,
        ap_idle => blendL_U0_ap_idle,
        ap_continue => blendL_U0_ap_continue);

    xfMat2AXIvideo87_U0 : component xfMat2AXIvideo87
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xfMat2AXIvideo87_U0_ap_start,
        ap_done => xfMat2AXIvideo87_U0_ap_done,
        ap_continue => xfMat2AXIvideo87_U0_ap_continue,
        ap_idle => xfMat2AXIvideo87_U0_ap_idle,
        ap_ready => xfMat2AXIvideo87_U0_ap_ready,
        img_data_V_dout => pyrS0_data_V_dout,
        img_data_V_empty_n => pyrS0_data_V_empty_n,
        img_data_V_read => xfMat2AXIvideo87_U0_img_data_V_read,
        p_pyrS0_TDATA => xfMat2AXIvideo87_U0_p_pyrS0_TDATA,
        p_pyrS0_TVALID => xfMat2AXIvideo87_U0_p_pyrS0_TVALID,
        p_pyrS0_TREADY => p_pyrS0_TREADY,
        p_pyrS0_TKEEP => xfMat2AXIvideo87_U0_p_pyrS0_TKEEP,
        p_pyrS0_TSTRB => xfMat2AXIvideo87_U0_p_pyrS0_TSTRB,
        p_pyrS0_TUSER => xfMat2AXIvideo87_U0_p_pyrS0_TUSER,
        p_pyrS0_TLAST => xfMat2AXIvideo87_U0_p_pyrS0_TLAST,
        p_pyrS0_TID => xfMat2AXIvideo87_U0_p_pyrS0_TID,
        p_pyrS0_TDEST => xfMat2AXIvideo87_U0_p_pyrS0_TDEST);

    xfMat2AXIvideo_U0 : component xfMat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xfMat2AXIvideo_U0_ap_start,
        ap_done => xfMat2AXIvideo_U0_ap_done,
        ap_continue => xfMat2AXIvideo_U0_ap_continue,
        ap_idle => xfMat2AXIvideo_U0_ap_idle,
        ap_ready => xfMat2AXIvideo_U0_ap_ready,
        img_data_V_dout => pyrS1_data_V_dout,
        img_data_V_empty_n => pyrS1_data_V_empty_n,
        img_data_V_read => xfMat2AXIvideo_U0_img_data_V_read,
        p_pyrS1_TDATA => xfMat2AXIvideo_U0_p_pyrS1_TDATA,
        p_pyrS1_TVALID => xfMat2AXIvideo_U0_p_pyrS1_TVALID,
        p_pyrS1_TREADY => p_pyrS1_TREADY,
        p_pyrS1_TKEEP => xfMat2AXIvideo_U0_p_pyrS1_TKEEP,
        p_pyrS1_TSTRB => xfMat2AXIvideo_U0_p_pyrS1_TSTRB,
        p_pyrS1_TUSER => xfMat2AXIvideo_U0_p_pyrS1_TUSER,
        p_pyrS1_TLAST => xfMat2AXIvideo_U0_p_pyrS1_TLAST,
        p_pyrS1_TID => xfMat2AXIvideo_U0_p_pyrS1_TID,
        p_pyrS1_TDEST => xfMat2AXIvideo_U0_p_pyrS1_TDEST);

    pyrLA0_rows_c_U : component fifo_w10_d2_A_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_pyrLA0_rows_out_din,
        if_full_n => pyrLA0_rows_c_full_n,
        if_write => Block_proc_U0_pyrLA0_rows_out_write,
        if_dout => pyrLA0_rows_c_dout,
        if_empty_n => pyrLA0_rows_c_empty_n,
        if_read => AXIvideo2xfMat84_U0_img_rows_read);

    pyrLA0_cols_c_U : component fifo_w11_d2_A_x0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_pyrLA0_cols_out_din,
        if_full_n => pyrLA0_cols_c_full_n,
        if_write => Block_proc_U0_pyrLA0_cols_out_write,
        if_dout => pyrLA0_cols_c_dout,
        if_empty_n => pyrLA0_cols_c_empty_n,
        if_read => AXIvideo2xfMat84_U0_img_cols_read);

    pyrLA1_rows_c_U : component fifo_w9_d2_A_x0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_pyrLA1_rows_out_din,
        if_full_n => pyrLA1_rows_c_full_n,
        if_write => Block_proc_U0_pyrLA1_rows_out_write,
        if_dout => pyrLA1_rows_c_dout,
        if_empty_n => pyrLA1_rows_c_empty_n,
        if_read => AXIvideo2xfMat85_U0_img_rows_read);

    pyrLA1_rows_c4_U : component fifo_w9_d3_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_pyrLA1_rows_out1_din,
        if_full_n => pyrLA1_rows_c4_full_n,
        if_write => Block_proc_U0_pyrLA1_rows_out1_write,
        if_dout => pyrLA1_rows_c4_dout,
        if_empty_n => pyrLA1_rows_c4_empty_n,
        if_read => blendL_U0_pyrLA1_rows_read);

    pyrLA1_cols_c_U : component fifo_w10_d2_A_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_pyrLA1_cols_out_din,
        if_full_n => pyrLA1_cols_c_full_n,
        if_write => Block_proc_U0_pyrLA1_cols_out_write,
        if_dout => pyrLA1_cols_c_dout,
        if_empty_n => pyrLA1_cols_c_empty_n,
        if_read => AXIvideo2xfMat85_U0_img_cols_read);

    pyrLA1_cols_c5_U : component fifo_w10_d3_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_pyrLA1_cols_out2_din,
        if_full_n => pyrLA1_cols_c5_full_n,
        if_write => Block_proc_U0_pyrLA1_cols_out2_write,
        if_dout => pyrLA1_cols_c5_dout,
        if_empty_n => pyrLA1_cols_c5_empty_n,
        if_read => blendL_U0_pyrLA1_cols_read);

    pyrLA0_data_V_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat84_U0_img_data_V_din,
        if_full_n => pyrLA0_data_V_full_n,
        if_write => AXIvideo2xfMat84_U0_img_data_V_write,
        if_dout => pyrLA0_data_V_dout,
        if_empty_n => pyrLA0_data_V_empty_n,
        if_read => blendL_U0_pyrLA0_data_V_read);

    pyrLA0_rows_c6_U : component fifo_w10_d2_A_x1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat84_U0_img_rows_out_din,
        if_full_n => pyrLA0_rows_c6_full_n,
        if_write => AXIvideo2xfMat84_U0_img_rows_out_write,
        if_dout => pyrLA0_rows_c6_dout,
        if_empty_n => pyrLA0_rows_c6_empty_n,
        if_read => blendL_U0_pyrLA0_rows_read);

    pyrLA0_cols_c7_U : component fifo_w11_d2_A_x0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat84_U0_img_cols_out_din,
        if_full_n => pyrLA0_cols_c7_full_n,
        if_write => AXIvideo2xfMat84_U0_img_cols_out_write,
        if_dout => pyrLA0_cols_c7_dout,
        if_empty_n => pyrLA0_cols_c7_empty_n,
        if_read => blendL_U0_pyrLA0_cols_read);

    pyrLA1_data_V_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat85_U0_img_data_V_din,
        if_full_n => pyrLA1_data_V_full_n,
        if_write => AXIvideo2xfMat85_U0_img_data_V_write,
        if_dout => pyrLA1_data_V_dout,
        if_empty_n => pyrLA1_data_V_empty_n,
        if_read => blendL_U0_pyrLA1_data_V_read);

    pyrLB0_data_V_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat86_U0_img_data_V_din,
        if_full_n => pyrLB0_data_V_full_n,
        if_write => AXIvideo2xfMat86_U0_img_data_V_write,
        if_dout => pyrLB0_data_V_dout,
        if_empty_n => pyrLB0_data_V_empty_n,
        if_read => blendL_U0_pyrLB0_data_V_read);

    pyrLB1_data_V_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_U0_img_data_V_din,
        if_full_n => pyrLB1_data_V_full_n,
        if_write => AXIvideo2xfMat_U0_img_data_V_write,
        if_dout => pyrLB1_data_V_dout,
        if_empty_n => pyrLB1_data_V_empty_n,
        if_read => blendL_U0_pyrLB1_data_V_read);

    pyrS0_data_V_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => blendL_U0_pyrS0_data_V_din,
        if_full_n => pyrS0_data_V_full_n,
        if_write => blendL_U0_pyrS0_data_V_write,
        if_dout => pyrS0_data_V_dout,
        if_empty_n => pyrS0_data_V_empty_n,
        if_read => xfMat2AXIvideo87_U0_img_data_V_read);

    pyrS1_data_V_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => blendL_U0_pyrS1_data_V_din,
        if_full_n => pyrS1_data_V_full_n,
        if_write => blendL_U0_pyrS1_data_V_write,
        if_dout => pyrS1_data_V_dout,
        if_empty_n => pyrS1_data_V_empty_n,
        if_read => xfMat2AXIvideo_U0_img_data_V_read);

    start_for_blendL_U0_U : component start_for_blendL_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_blendL_U0_din,
        if_full_n => start_for_blendL_U0_full_n,
        if_write => Block_proc_U0_start_write,
        if_dout => start_for_blendL_U0_dout,
        if_empty_n => start_for_blendL_U0_empty_n,
        if_read => blendL_U0_ap_ready);

    start_for_xfMat2AIfE_U : component start_for_xfMat2AIfE
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xfMat2AXIvideo87_U0_din,
        if_full_n => start_for_xfMat2AXIvideo87_U0_full_n,
        if_write => blendL_U0_start_write,
        if_dout => start_for_xfMat2AXIvideo87_U0_dout,
        if_empty_n => start_for_xfMat2AXIvideo87_U0_empty_n,
        if_read => xfMat2AXIvideo87_U0_ap_ready);

    start_for_xfMat2AJfO_U : component start_for_xfMat2AJfO
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xfMat2AXIvideo_U0_din,
        if_full_n => start_for_xfMat2AXIvideo_U0_full_n,
        if_write => blendL_U0_start_write,
        if_dout => start_for_xfMat2AXIvideo_U0_dout,
        if_empty_n => start_for_xfMat2AXIvideo_U0_empty_n,
        if_read => xfMat2AXIvideo_U0_ap_ready);





    ap_sync_reg_AXIvideo2xfMat84_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2xfMat84_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2xfMat84_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2xfMat84_U0_ap_ready <= ap_sync_AXIvideo2xfMat84_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_AXIvideo2xfMat85_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2xfMat85_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2xfMat85_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2xfMat85_U0_ap_ready <= ap_sync_AXIvideo2xfMat85_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_AXIvideo2xfMat86_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2xfMat86_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2xfMat86_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2xfMat86_U0_ap_ready <= ap_sync_AXIvideo2xfMat86_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_AXIvideo2xfMat_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2xfMat_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2xfMat_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2xfMat_U0_ap_ready <= ap_sync_AXIvideo2xfMat_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Block_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_proc_U0_ap_ready <= ap_sync_Block_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    AXIvideo2xfMat84_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = AXIvideo2xfMat84_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                AXIvideo2xfMat84_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2xfMat84_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = AXIvideo2xfMat84_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                AXIvideo2xfMat84_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2xfMat84_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    AXIvideo2xfMat85_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = AXIvideo2xfMat85_U0_ap_ready))) then 
                AXIvideo2xfMat85_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2xfMat85_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = AXIvideo2xfMat85_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                AXIvideo2xfMat85_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2xfMat85_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    AXIvideo2xfMat86_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = AXIvideo2xfMat86_U0_ap_ready))) then 
                AXIvideo2xfMat86_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2xfMat86_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = AXIvideo2xfMat86_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                AXIvideo2xfMat86_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2xfMat86_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    AXIvideo2xfMat_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = AXIvideo2xfMat_U0_ap_ready))) then 
                AXIvideo2xfMat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2xfMat_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = AXIvideo2xfMat_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                AXIvideo2xfMat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2xfMat_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    Block_proc_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = Block_proc_U0_ap_ready))) then 
                Block_proc_U0_ap_ready_count <= std_logic_vector(unsigned(Block_proc_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = Block_proc_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                Block_proc_U0_ap_ready_count <= std_logic_vector(unsigned(Block_proc_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    AXIvideo2xfMat84_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2xfMat84_U0_ap_start <= ((ap_sync_reg_AXIvideo2xfMat84_U0_ap_ready xor ap_const_logic_1) and ap_start);
    AXIvideo2xfMat84_U0_start_full_n <= ap_const_logic_1;
    AXIvideo2xfMat84_U0_start_write <= ap_const_logic_0;
    AXIvideo2xfMat85_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2xfMat85_U0_ap_start <= ((ap_sync_reg_AXIvideo2xfMat85_U0_ap_ready xor ap_const_logic_1) and ap_start);
    AXIvideo2xfMat85_U0_start_full_n <= ap_const_logic_1;
    AXIvideo2xfMat85_U0_start_write <= ap_const_logic_0;
    AXIvideo2xfMat86_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2xfMat86_U0_ap_start <= ((ap_sync_reg_AXIvideo2xfMat86_U0_ap_ready xor ap_const_logic_1) and ap_start);
    AXIvideo2xfMat86_U0_start_full_n <= ap_const_logic_1;
    AXIvideo2xfMat86_U0_start_write <= ap_const_logic_0;
    AXIvideo2xfMat_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2xfMat_U0_ap_start <= ((ap_sync_reg_AXIvideo2xfMat_U0_ap_ready xor ap_const_logic_1) and ap_start);
    AXIvideo2xfMat_U0_start_full_n <= ap_const_logic_1;
    AXIvideo2xfMat_U0_start_write <= ap_const_logic_0;
    Block_proc_U0_ap_continue <= ap_const_logic_1;
    Block_proc_U0_ap_start <= ((ap_sync_reg_Block_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    ap_done <= ap_sync_done;
    ap_idle <= (xfMat2AXIvideo_U0_ap_idle and xfMat2AXIvideo87_U0_ap_idle and blendL_U0_ap_idle and Block_proc_U0_ap_idle and AXIvideo2xfMat_U0_ap_idle and AXIvideo2xfMat86_U0_ap_idle and AXIvideo2xfMat85_U0_ap_idle and AXIvideo2xfMat84_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_AXIvideo2xfMat84_U0_ap_ready <= (ap_sync_reg_AXIvideo2xfMat84_U0_ap_ready or AXIvideo2xfMat84_U0_ap_ready);
    ap_sync_AXIvideo2xfMat85_U0_ap_ready <= (ap_sync_reg_AXIvideo2xfMat85_U0_ap_ready or AXIvideo2xfMat85_U0_ap_ready);
    ap_sync_AXIvideo2xfMat86_U0_ap_ready <= (ap_sync_reg_AXIvideo2xfMat86_U0_ap_ready or AXIvideo2xfMat86_U0_ap_ready);
    ap_sync_AXIvideo2xfMat_U0_ap_ready <= (ap_sync_reg_AXIvideo2xfMat_U0_ap_ready or AXIvideo2xfMat_U0_ap_ready);
    ap_sync_Block_proc_U0_ap_ready <= (ap_sync_reg_Block_proc_U0_ap_ready or Block_proc_U0_ap_ready);
    ap_sync_continue <= ap_sync_done;
    ap_sync_done <= (xfMat2AXIvideo_U0_ap_done and xfMat2AXIvideo87_U0_ap_done);
    ap_sync_ready <= (ap_sync_Block_proc_U0_ap_ready and ap_sync_AXIvideo2xfMat_U0_ap_ready and ap_sync_AXIvideo2xfMat86_U0_ap_ready and ap_sync_AXIvideo2xfMat85_U0_ap_ready and ap_sync_AXIvideo2xfMat84_U0_ap_ready);
    blendL_U0_ap_continue <= ap_const_logic_1;
    blendL_U0_ap_start <= start_for_blendL_U0_empty_n;
    blendL_U0_start_full_n <= (start_for_xfMat2AXIvideo_U0_full_n and start_for_xfMat2AXIvideo87_U0_full_n);
    p_pyrLA0_TREADY <= AXIvideo2xfMat84_U0_p_pyrLA0_TREADY;
    p_pyrLA1_TREADY <= AXIvideo2xfMat85_U0_p_pyrLA1_TREADY;
    p_pyrLB0_TREADY <= AXIvideo2xfMat86_U0_p_pyrLB0_TREADY;
    p_pyrLB1_TREADY <= AXIvideo2xfMat_U0_p_pyrLB1_TREADY;
    p_pyrS0_TDATA <= xfMat2AXIvideo87_U0_p_pyrS0_TDATA;
    p_pyrS0_TDEST <= xfMat2AXIvideo87_U0_p_pyrS0_TDEST;
    p_pyrS0_TID <= xfMat2AXIvideo87_U0_p_pyrS0_TID;
    p_pyrS0_TKEEP <= xfMat2AXIvideo87_U0_p_pyrS0_TKEEP;
    p_pyrS0_TLAST <= xfMat2AXIvideo87_U0_p_pyrS0_TLAST;
    p_pyrS0_TSTRB <= xfMat2AXIvideo87_U0_p_pyrS0_TSTRB;
    p_pyrS0_TUSER <= xfMat2AXIvideo87_U0_p_pyrS0_TUSER;
    p_pyrS0_TVALID <= xfMat2AXIvideo87_U0_p_pyrS0_TVALID;
    p_pyrS1_TDATA <= xfMat2AXIvideo_U0_p_pyrS1_TDATA;
    p_pyrS1_TDEST <= xfMat2AXIvideo_U0_p_pyrS1_TDEST;
    p_pyrS1_TID <= xfMat2AXIvideo_U0_p_pyrS1_TID;
    p_pyrS1_TKEEP <= xfMat2AXIvideo_U0_p_pyrS1_TKEEP;
    p_pyrS1_TLAST <= xfMat2AXIvideo_U0_p_pyrS1_TLAST;
    p_pyrS1_TSTRB <= xfMat2AXIvideo_U0_p_pyrS1_TSTRB;
    p_pyrS1_TUSER <= xfMat2AXIvideo_U0_p_pyrS1_TUSER;
    p_pyrS1_TVALID <= xfMat2AXIvideo_U0_p_pyrS1_TVALID;
    start_for_blendL_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xfMat2AXIvideo87_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xfMat2AXIvideo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xfMat2AXIvideo87_U0_ap_continue <= ap_sync_done;
    xfMat2AXIvideo87_U0_ap_start <= start_for_xfMat2AXIvideo87_U0_empty_n;
    xfMat2AXIvideo87_U0_start_full_n <= ap_const_logic_1;
    xfMat2AXIvideo87_U0_start_write <= ap_const_logic_0;
    xfMat2AXIvideo_U0_ap_continue <= ap_sync_done;
    xfMat2AXIvideo_U0_ap_start <= start_for_xfMat2AXIvideo_U0_empty_n;
    xfMat2AXIvideo_U0_start_full_n <= ap_const_logic_1;
    xfMat2AXIvideo_U0_start_write <= ap_const_logic_0;
end behav;
