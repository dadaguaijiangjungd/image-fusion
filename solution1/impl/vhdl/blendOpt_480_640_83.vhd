-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity blendOpt_480_640_83 is
port (
    imageA_rows_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    imageA_rows_empty_n : IN STD_LOGIC;
    imageA_rows_read : OUT STD_LOGIC;
    imageA_cols_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    imageA_cols_empty_n : IN STD_LOGIC;
    imageA_cols_read : OUT STD_LOGIC;
    imageA_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    imageA_data_V_empty_n : IN STD_LOGIC;
    imageA_data_V_read : OUT STD_LOGIC;
    imageB_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    imageB_data_V_empty_n : IN STD_LOGIC;
    imageB_data_V_read : OUT STD_LOGIC;
    imageS_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    imageS_data_V_full_n : IN STD_LOGIC;
    imageS_data_V_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of blendOpt_480_640_83 is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal blendOpt83_Block_pr_U0_ap_start : STD_LOGIC;
    signal blendOpt83_Block_pr_U0_ap_done : STD_LOGIC;
    signal blendOpt83_Block_pr_U0_ap_continue : STD_LOGIC;
    signal blendOpt83_Block_pr_U0_ap_idle : STD_LOGIC;
    signal blendOpt83_Block_pr_U0_ap_ready : STD_LOGIC;
    signal blendOpt83_Block_pr_U0_imageA_rows_read : STD_LOGIC;
    signal blendOpt83_Block_pr_U0_imageA_cols_read : STD_LOGIC;
    signal blendOpt83_Block_pr_U0_imageA_rows_load3_out_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal blendOpt83_Block_pr_U0_imageA_rows_load3_out_out_write : STD_LOGIC;
    signal blendOpt83_Block_pr_U0_imageA_cols_load4_out_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal blendOpt83_Block_pr_U0_imageA_cols_load4_out_out_write : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_ap_start : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_ap_done : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_ap_continue : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_ap_idle : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_ap_ready : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_start_out : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_start_write : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_imageA_rows_load3_loc_read : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_imageA_cols_load4_loc_read : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_imageA_data_V_read : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_p_imageA_in_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal blendOpt83_Loop_1_pr_U0_p_imageA_in_V_V_write : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_imageB_data_V_read : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_p_imageB_in_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal blendOpt83_Loop_1_pr_U0_p_imageB_in_V_V_write : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_imageA_rows_load3_loc_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal blendOpt83_Loop_1_pr_U0_imageA_rows_load3_loc_out_write : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_imageA_cols_load4_loc_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal blendOpt83_Loop_1_pr_U0_imageA_cols_load4_loc_out_write : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_ap_start : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_ap_done : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_ap_continue : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_ap_idle : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_ap_ready : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_start_out : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_start_write : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_p_imageA_in_V_V_read : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_p_imageB_in_V_V_read : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_p_imageS_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFPyrDownGaussianBlu_U0_p_imageS_out_V_V_write : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_imageA_rows_load3_loc_read : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_imageA_cols_load4_loc_read : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_imageA_rows_load3_loc_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal xFPyrDownGaussianBlu_U0_imageA_rows_load3_loc_out_write : STD_LOGIC;
    signal xFPyrDownGaussianBlu_U0_imageA_cols_load4_loc_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal xFPyrDownGaussianBlu_U0_imageA_cols_load4_loc_out_write : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_ap_start : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_ap_done : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_ap_continue : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_ap_idle : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_ap_ready : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_imageA_rows_load3_loc_read : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_imageA_cols_load4_loc_read : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_p_imageS_out_V_V_read : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_imageS_data_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal blendOpt83_Loop_2_pr_U0_imageS_data_V_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal imageA_rows_load3_lo_2_full_n : STD_LOGIC;
    signal imageA_rows_load3_lo_2_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal imageA_rows_load3_lo_2_empty_n : STD_LOGIC;
    signal imageA_cols_load4_lo_2_full_n : STD_LOGIC;
    signal imageA_cols_load4_lo_2_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal imageA_cols_load4_lo_2_empty_n : STD_LOGIC;
    signal p_imageA_in_V_V_full_n : STD_LOGIC;
    signal p_imageA_in_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_imageA_in_V_V_empty_n : STD_LOGIC;
    signal p_imageB_in_V_V_full_n : STD_LOGIC;
    signal p_imageB_in_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_imageB_in_V_V_empty_n : STD_LOGIC;
    signal imageA_rows_load3_lo_1_full_n : STD_LOGIC;
    signal imageA_rows_load3_lo_1_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal imageA_rows_load3_lo_1_empty_n : STD_LOGIC;
    signal imageA_cols_load4_lo_1_full_n : STD_LOGIC;
    signal imageA_cols_load4_lo_1_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal imageA_cols_load4_lo_1_empty_n : STD_LOGIC;
    signal p_imageS_out_V_V_full_n : STD_LOGIC;
    signal p_imageS_out_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_imageS_out_V_V_empty_n : STD_LOGIC;
    signal imageA_rows_load3_lo_full_n : STD_LOGIC;
    signal imageA_rows_load3_lo_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal imageA_rows_load3_lo_empty_n : STD_LOGIC;
    signal imageA_cols_load4_lo_full_n : STD_LOGIC;
    signal imageA_cols_load4_lo_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal imageA_cols_load4_lo_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_blendOpt83_Block_pr_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_blendOpt83_Block_pr_U0_ap_ready : STD_LOGIC;
    signal blendOpt83_Block_pr_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_blendOpt83_Loop_1_pr_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_blendOpt83_Loop_1_pr_U0_ap_ready : STD_LOGIC;
    signal blendOpt83_Loop_1_pr_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal blendOpt83_Block_pr_U0_start_full_n : STD_LOGIC;
    signal blendOpt83_Block_pr_U0_start_write : STD_LOGIC;
    signal start_for_xFPyrDownGaussianBlu_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFPyrDownGaussianBlu_U0_full_n : STD_LOGIC;
    signal start_for_xFPyrDownGaussianBlu_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFPyrDownGaussianBlu_U0_empty_n : STD_LOGIC;
    signal start_for_blendOpt83_Loop_2_pr_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_blendOpt83_Loop_2_pr_U0_full_n : STD_LOGIC;
    signal start_for_blendOpt83_Loop_2_pr_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_blendOpt83_Loop_2_pr_U0_empty_n : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_start_full_n : STD_LOGIC;
    signal blendOpt83_Loop_2_pr_U0_start_write : STD_LOGIC;

    component blendOpt83_Block_pr IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        imageA_rows_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        imageA_rows_empty_n : IN STD_LOGIC;
        imageA_rows_read : OUT STD_LOGIC;
        imageA_cols_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        imageA_cols_empty_n : IN STD_LOGIC;
        imageA_cols_read : OUT STD_LOGIC;
        imageA_rows_load3_out_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        imageA_rows_load3_out_out_full_n : IN STD_LOGIC;
        imageA_rows_load3_out_out_write : OUT STD_LOGIC;
        imageA_cols_load4_out_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        imageA_cols_load4_out_out_full_n : IN STD_LOGIC;
        imageA_cols_load4_out_out_write : OUT STD_LOGIC );
    end component;


    component blendOpt83_Loop_1_pr IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        imageA_rows_load3_loc_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        imageA_rows_load3_loc_empty_n : IN STD_LOGIC;
        imageA_rows_load3_loc_read : OUT STD_LOGIC;
        imageA_cols_load4_loc_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        imageA_cols_load4_loc_empty_n : IN STD_LOGIC;
        imageA_cols_load4_loc_read : OUT STD_LOGIC;
        imageA_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imageA_data_V_empty_n : IN STD_LOGIC;
        imageA_data_V_read : OUT STD_LOGIC;
        p_imageA_in_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_imageA_in_V_V_full_n : IN STD_LOGIC;
        p_imageA_in_V_V_write : OUT STD_LOGIC;
        imageB_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imageB_data_V_empty_n : IN STD_LOGIC;
        imageB_data_V_read : OUT STD_LOGIC;
        p_imageB_in_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_imageB_in_V_V_full_n : IN STD_LOGIC;
        p_imageB_in_V_V_write : OUT STD_LOGIC;
        imageA_rows_load3_loc_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        imageA_rows_load3_loc_out_full_n : IN STD_LOGIC;
        imageA_rows_load3_loc_out_write : OUT STD_LOGIC;
        imageA_cols_load4_loc_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        imageA_cols_load4_loc_out_full_n : IN STD_LOGIC;
        imageA_cols_load4_loc_out_write : OUT STD_LOGIC );
    end component;


    component xFPyrDownGaussianBlu IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_imageA_in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_imageA_in_V_V_empty_n : IN STD_LOGIC;
        p_imageA_in_V_V_read : OUT STD_LOGIC;
        p_imageB_in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_imageB_in_V_V_empty_n : IN STD_LOGIC;
        p_imageB_in_V_V_read : OUT STD_LOGIC;
        p_imageS_out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_imageS_out_V_V_full_n : IN STD_LOGIC;
        p_imageS_out_V_V_write : OUT STD_LOGIC;
        imageA_rows_load3_loc_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        imageA_rows_load3_loc_empty_n : IN STD_LOGIC;
        imageA_rows_load3_loc_read : OUT STD_LOGIC;
        imageA_cols_load4_loc_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        imageA_cols_load4_loc_empty_n : IN STD_LOGIC;
        imageA_cols_load4_loc_read : OUT STD_LOGIC;
        imageA_rows_load3_loc_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        imageA_rows_load3_loc_out_full_n : IN STD_LOGIC;
        imageA_rows_load3_loc_out_write : OUT STD_LOGIC;
        imageA_cols_load4_loc_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        imageA_cols_load4_loc_out_full_n : IN STD_LOGIC;
        imageA_cols_load4_loc_out_write : OUT STD_LOGIC );
    end component;


    component blendOpt83_Loop_2_pr IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        imageA_rows_load3_loc_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        imageA_rows_load3_loc_empty_n : IN STD_LOGIC;
        imageA_rows_load3_loc_read : OUT STD_LOGIC;
        imageA_cols_load4_loc_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        imageA_cols_load4_loc_empty_n : IN STD_LOGIC;
        imageA_cols_load4_loc_read : OUT STD_LOGIC;
        p_imageS_out_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_imageS_out_V_V_empty_n : IN STD_LOGIC;
        p_imageS_out_V_V_read : OUT STD_LOGIC;
        imageS_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imageS_data_V_full_n : IN STD_LOGIC;
        imageS_data_V_write : OUT STD_LOGIC );
    end component;


    component fifo_w10_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w11_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_xFPyrDoDeQ IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_blendOpEe0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    blendOpt83_Block_pr_U0 : component blendOpt83_Block_pr
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => blendOpt83_Block_pr_U0_ap_start,
        ap_done => blendOpt83_Block_pr_U0_ap_done,
        ap_continue => blendOpt83_Block_pr_U0_ap_continue,
        ap_idle => blendOpt83_Block_pr_U0_ap_idle,
        ap_ready => blendOpt83_Block_pr_U0_ap_ready,
        imageA_rows_dout => imageA_rows_dout,
        imageA_rows_empty_n => imageA_rows_empty_n,
        imageA_rows_read => blendOpt83_Block_pr_U0_imageA_rows_read,
        imageA_cols_dout => imageA_cols_dout,
        imageA_cols_empty_n => imageA_cols_empty_n,
        imageA_cols_read => blendOpt83_Block_pr_U0_imageA_cols_read,
        imageA_rows_load3_out_out_din => blendOpt83_Block_pr_U0_imageA_rows_load3_out_out_din,
        imageA_rows_load3_out_out_full_n => imageA_rows_load3_lo_2_full_n,
        imageA_rows_load3_out_out_write => blendOpt83_Block_pr_U0_imageA_rows_load3_out_out_write,
        imageA_cols_load4_out_out_din => blendOpt83_Block_pr_U0_imageA_cols_load4_out_out_din,
        imageA_cols_load4_out_out_full_n => imageA_cols_load4_lo_2_full_n,
        imageA_cols_load4_out_out_write => blendOpt83_Block_pr_U0_imageA_cols_load4_out_out_write);

    blendOpt83_Loop_1_pr_U0 : component blendOpt83_Loop_1_pr
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => blendOpt83_Loop_1_pr_U0_ap_start,
        start_full_n => start_for_xFPyrDownGaussianBlu_U0_full_n,
        ap_done => blendOpt83_Loop_1_pr_U0_ap_done,
        ap_continue => blendOpt83_Loop_1_pr_U0_ap_continue,
        ap_idle => blendOpt83_Loop_1_pr_U0_ap_idle,
        ap_ready => blendOpt83_Loop_1_pr_U0_ap_ready,
        start_out => blendOpt83_Loop_1_pr_U0_start_out,
        start_write => blendOpt83_Loop_1_pr_U0_start_write,
        imageA_rows_load3_loc_dout => imageA_rows_load3_lo_2_dout,
        imageA_rows_load3_loc_empty_n => imageA_rows_load3_lo_2_empty_n,
        imageA_rows_load3_loc_read => blendOpt83_Loop_1_pr_U0_imageA_rows_load3_loc_read,
        imageA_cols_load4_loc_dout => imageA_cols_load4_lo_2_dout,
        imageA_cols_load4_loc_empty_n => imageA_cols_load4_lo_2_empty_n,
        imageA_cols_load4_loc_read => blendOpt83_Loop_1_pr_U0_imageA_cols_load4_loc_read,
        imageA_data_V_dout => imageA_data_V_dout,
        imageA_data_V_empty_n => imageA_data_V_empty_n,
        imageA_data_V_read => blendOpt83_Loop_1_pr_U0_imageA_data_V_read,
        p_imageA_in_V_V_din => blendOpt83_Loop_1_pr_U0_p_imageA_in_V_V_din,
        p_imageA_in_V_V_full_n => p_imageA_in_V_V_full_n,
        p_imageA_in_V_V_write => blendOpt83_Loop_1_pr_U0_p_imageA_in_V_V_write,
        imageB_data_V_dout => imageB_data_V_dout,
        imageB_data_V_empty_n => imageB_data_V_empty_n,
        imageB_data_V_read => blendOpt83_Loop_1_pr_U0_imageB_data_V_read,
        p_imageB_in_V_V_din => blendOpt83_Loop_1_pr_U0_p_imageB_in_V_V_din,
        p_imageB_in_V_V_full_n => p_imageB_in_V_V_full_n,
        p_imageB_in_V_V_write => blendOpt83_Loop_1_pr_U0_p_imageB_in_V_V_write,
        imageA_rows_load3_loc_out_din => blendOpt83_Loop_1_pr_U0_imageA_rows_load3_loc_out_din,
        imageA_rows_load3_loc_out_full_n => imageA_rows_load3_lo_1_full_n,
        imageA_rows_load3_loc_out_write => blendOpt83_Loop_1_pr_U0_imageA_rows_load3_loc_out_write,
        imageA_cols_load4_loc_out_din => blendOpt83_Loop_1_pr_U0_imageA_cols_load4_loc_out_din,
        imageA_cols_load4_loc_out_full_n => imageA_cols_load4_lo_1_full_n,
        imageA_cols_load4_loc_out_write => blendOpt83_Loop_1_pr_U0_imageA_cols_load4_loc_out_write);

    xFPyrDownGaussianBlu_U0 : component xFPyrDownGaussianBlu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFPyrDownGaussianBlu_U0_ap_start,
        start_full_n => start_for_blendOpt83_Loop_2_pr_U0_full_n,
        ap_done => xFPyrDownGaussianBlu_U0_ap_done,
        ap_continue => xFPyrDownGaussianBlu_U0_ap_continue,
        ap_idle => xFPyrDownGaussianBlu_U0_ap_idle,
        ap_ready => xFPyrDownGaussianBlu_U0_ap_ready,
        start_out => xFPyrDownGaussianBlu_U0_start_out,
        start_write => xFPyrDownGaussianBlu_U0_start_write,
        p_imageA_in_V_V_dout => p_imageA_in_V_V_dout,
        p_imageA_in_V_V_empty_n => p_imageA_in_V_V_empty_n,
        p_imageA_in_V_V_read => xFPyrDownGaussianBlu_U0_p_imageA_in_V_V_read,
        p_imageB_in_V_V_dout => p_imageB_in_V_V_dout,
        p_imageB_in_V_V_empty_n => p_imageB_in_V_V_empty_n,
        p_imageB_in_V_V_read => xFPyrDownGaussianBlu_U0_p_imageB_in_V_V_read,
        p_imageS_out_V_V_din => xFPyrDownGaussianBlu_U0_p_imageS_out_V_V_din,
        p_imageS_out_V_V_full_n => p_imageS_out_V_V_full_n,
        p_imageS_out_V_V_write => xFPyrDownGaussianBlu_U0_p_imageS_out_V_V_write,
        imageA_rows_load3_loc_dout => imageA_rows_load3_lo_1_dout,
        imageA_rows_load3_loc_empty_n => imageA_rows_load3_lo_1_empty_n,
        imageA_rows_load3_loc_read => xFPyrDownGaussianBlu_U0_imageA_rows_load3_loc_read,
        imageA_cols_load4_loc_dout => imageA_cols_load4_lo_1_dout,
        imageA_cols_load4_loc_empty_n => imageA_cols_load4_lo_1_empty_n,
        imageA_cols_load4_loc_read => xFPyrDownGaussianBlu_U0_imageA_cols_load4_loc_read,
        imageA_rows_load3_loc_out_din => xFPyrDownGaussianBlu_U0_imageA_rows_load3_loc_out_din,
        imageA_rows_load3_loc_out_full_n => imageA_rows_load3_lo_full_n,
        imageA_rows_load3_loc_out_write => xFPyrDownGaussianBlu_U0_imageA_rows_load3_loc_out_write,
        imageA_cols_load4_loc_out_din => xFPyrDownGaussianBlu_U0_imageA_cols_load4_loc_out_din,
        imageA_cols_load4_loc_out_full_n => imageA_cols_load4_lo_full_n,
        imageA_cols_load4_loc_out_write => xFPyrDownGaussianBlu_U0_imageA_cols_load4_loc_out_write);

    blendOpt83_Loop_2_pr_U0 : component blendOpt83_Loop_2_pr
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => blendOpt83_Loop_2_pr_U0_ap_start,
        ap_done => blendOpt83_Loop_2_pr_U0_ap_done,
        ap_continue => blendOpt83_Loop_2_pr_U0_ap_continue,
        ap_idle => blendOpt83_Loop_2_pr_U0_ap_idle,
        ap_ready => blendOpt83_Loop_2_pr_U0_ap_ready,
        imageA_rows_load3_loc_dout => imageA_rows_load3_lo_dout,
        imageA_rows_load3_loc_empty_n => imageA_rows_load3_lo_empty_n,
        imageA_rows_load3_loc_read => blendOpt83_Loop_2_pr_U0_imageA_rows_load3_loc_read,
        imageA_cols_load4_loc_dout => imageA_cols_load4_lo_dout,
        imageA_cols_load4_loc_empty_n => imageA_cols_load4_lo_empty_n,
        imageA_cols_load4_loc_read => blendOpt83_Loop_2_pr_U0_imageA_cols_load4_loc_read,
        p_imageS_out_V_V_dout => p_imageS_out_V_V_dout,
        p_imageS_out_V_V_empty_n => p_imageS_out_V_V_empty_n,
        p_imageS_out_V_V_read => blendOpt83_Loop_2_pr_U0_p_imageS_out_V_V_read,
        imageS_data_V_din => blendOpt83_Loop_2_pr_U0_imageS_data_V_din,
        imageS_data_V_full_n => imageS_data_V_full_n,
        imageS_data_V_write => blendOpt83_Loop_2_pr_U0_imageS_data_V_write);

    imageA_rows_load3_lo_2_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => blendOpt83_Block_pr_U0_imageA_rows_load3_out_out_din,
        if_full_n => imageA_rows_load3_lo_2_full_n,
        if_write => blendOpt83_Block_pr_U0_imageA_rows_load3_out_out_write,
        if_dout => imageA_rows_load3_lo_2_dout,
        if_empty_n => imageA_rows_load3_lo_2_empty_n,
        if_read => blendOpt83_Loop_1_pr_U0_imageA_rows_load3_loc_read);

    imageA_cols_load4_lo_2_U : component fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => blendOpt83_Block_pr_U0_imageA_cols_load4_out_out_din,
        if_full_n => imageA_cols_load4_lo_2_full_n,
        if_write => blendOpt83_Block_pr_U0_imageA_cols_load4_out_out_write,
        if_dout => imageA_cols_load4_lo_2_dout,
        if_empty_n => imageA_cols_load4_lo_2_empty_n,
        if_read => blendOpt83_Loop_1_pr_U0_imageA_cols_load4_loc_read);

    p_imageA_in_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => blendOpt83_Loop_1_pr_U0_p_imageA_in_V_V_din,
        if_full_n => p_imageA_in_V_V_full_n,
        if_write => blendOpt83_Loop_1_pr_U0_p_imageA_in_V_V_write,
        if_dout => p_imageA_in_V_V_dout,
        if_empty_n => p_imageA_in_V_V_empty_n,
        if_read => xFPyrDownGaussianBlu_U0_p_imageA_in_V_V_read);

    p_imageB_in_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => blendOpt83_Loop_1_pr_U0_p_imageB_in_V_V_din,
        if_full_n => p_imageB_in_V_V_full_n,
        if_write => blendOpt83_Loop_1_pr_U0_p_imageB_in_V_V_write,
        if_dout => p_imageB_in_V_V_dout,
        if_empty_n => p_imageB_in_V_V_empty_n,
        if_read => xFPyrDownGaussianBlu_U0_p_imageB_in_V_V_read);

    imageA_rows_load3_lo_1_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => blendOpt83_Loop_1_pr_U0_imageA_rows_load3_loc_out_din,
        if_full_n => imageA_rows_load3_lo_1_full_n,
        if_write => blendOpt83_Loop_1_pr_U0_imageA_rows_load3_loc_out_write,
        if_dout => imageA_rows_load3_lo_1_dout,
        if_empty_n => imageA_rows_load3_lo_1_empty_n,
        if_read => xFPyrDownGaussianBlu_U0_imageA_rows_load3_loc_read);

    imageA_cols_load4_lo_1_U : component fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => blendOpt83_Loop_1_pr_U0_imageA_cols_load4_loc_out_din,
        if_full_n => imageA_cols_load4_lo_1_full_n,
        if_write => blendOpt83_Loop_1_pr_U0_imageA_cols_load4_loc_out_write,
        if_dout => imageA_cols_load4_lo_1_dout,
        if_empty_n => imageA_cols_load4_lo_1_empty_n,
        if_read => xFPyrDownGaussianBlu_U0_imageA_cols_load4_loc_read);

    p_imageS_out_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFPyrDownGaussianBlu_U0_p_imageS_out_V_V_din,
        if_full_n => p_imageS_out_V_V_full_n,
        if_write => xFPyrDownGaussianBlu_U0_p_imageS_out_V_V_write,
        if_dout => p_imageS_out_V_V_dout,
        if_empty_n => p_imageS_out_V_V_empty_n,
        if_read => blendOpt83_Loop_2_pr_U0_p_imageS_out_V_V_read);

    imageA_rows_load3_lo_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFPyrDownGaussianBlu_U0_imageA_rows_load3_loc_out_din,
        if_full_n => imageA_rows_load3_lo_full_n,
        if_write => xFPyrDownGaussianBlu_U0_imageA_rows_load3_loc_out_write,
        if_dout => imageA_rows_load3_lo_dout,
        if_empty_n => imageA_rows_load3_lo_empty_n,
        if_read => blendOpt83_Loop_2_pr_U0_imageA_rows_load3_loc_read);

    imageA_cols_load4_lo_U : component fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFPyrDownGaussianBlu_U0_imageA_cols_load4_loc_out_din,
        if_full_n => imageA_cols_load4_lo_full_n,
        if_write => xFPyrDownGaussianBlu_U0_imageA_cols_load4_loc_out_write,
        if_dout => imageA_cols_load4_lo_dout,
        if_empty_n => imageA_cols_load4_lo_empty_n,
        if_read => blendOpt83_Loop_2_pr_U0_imageA_cols_load4_loc_read);

    start_for_xFPyrDoDeQ_U : component start_for_xFPyrDoDeQ
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFPyrDownGaussianBlu_U0_din,
        if_full_n => start_for_xFPyrDownGaussianBlu_U0_full_n,
        if_write => blendOpt83_Loop_1_pr_U0_start_write,
        if_dout => start_for_xFPyrDownGaussianBlu_U0_dout,
        if_empty_n => start_for_xFPyrDownGaussianBlu_U0_empty_n,
        if_read => xFPyrDownGaussianBlu_U0_ap_ready);

    start_for_blendOpEe0_U : component start_for_blendOpEe0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_blendOpt83_Loop_2_pr_U0_din,
        if_full_n => start_for_blendOpt83_Loop_2_pr_U0_full_n,
        if_write => xFPyrDownGaussianBlu_U0_start_write,
        if_dout => start_for_blendOpt83_Loop_2_pr_U0_dout,
        if_empty_n => start_for_blendOpt83_Loop_2_pr_U0_empty_n,
        if_read => blendOpt83_Loop_2_pr_U0_ap_ready);





    ap_sync_reg_blendOpt83_Block_pr_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_blendOpt83_Block_pr_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_blendOpt83_Block_pr_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_blendOpt83_Block_pr_U0_ap_ready <= ap_sync_blendOpt83_Block_pr_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_blendOpt83_Loop_1_pr_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_blendOpt83_Loop_1_pr_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_blendOpt83_Loop_1_pr_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_blendOpt83_Loop_1_pr_U0_ap_ready <= ap_sync_blendOpt83_Loop_1_pr_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    blendOpt83_Block_pr_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((blendOpt83_Block_pr_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                blendOpt83_Block_pr_U0_ap_ready_count <= std_logic_vector(unsigned(blendOpt83_Block_pr_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (blendOpt83_Block_pr_U0_ap_ready = ap_const_logic_1))) then 
                blendOpt83_Block_pr_U0_ap_ready_count <= std_logic_vector(unsigned(blendOpt83_Block_pr_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    blendOpt83_Loop_1_pr_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((blendOpt83_Loop_1_pr_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                blendOpt83_Loop_1_pr_U0_ap_ready_count <= std_logic_vector(unsigned(blendOpt83_Loop_1_pr_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (blendOpt83_Loop_1_pr_U0_ap_ready = ap_const_logic_1))) then 
                blendOpt83_Loop_1_pr_U0_ap_ready_count <= std_logic_vector(unsigned(blendOpt83_Loop_1_pr_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    ap_done <= blendOpt83_Loop_2_pr_U0_ap_done;
    ap_idle <= (xFPyrDownGaussianBlu_U0_ap_idle and blendOpt83_Loop_2_pr_U0_ap_idle and blendOpt83_Loop_1_pr_U0_ap_idle and blendOpt83_Block_pr_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_blendOpt83_Block_pr_U0_ap_ready <= (blendOpt83_Block_pr_U0_ap_ready or ap_sync_reg_blendOpt83_Block_pr_U0_ap_ready);
    ap_sync_blendOpt83_Loop_1_pr_U0_ap_ready <= (blendOpt83_Loop_1_pr_U0_ap_ready or ap_sync_reg_blendOpt83_Loop_1_pr_U0_ap_ready);
    ap_sync_continue <= ap_continue;
    ap_sync_done <= blendOpt83_Loop_2_pr_U0_ap_done;
    ap_sync_ready <= (ap_sync_blendOpt83_Loop_1_pr_U0_ap_ready and ap_sync_blendOpt83_Block_pr_U0_ap_ready);
    blendOpt83_Block_pr_U0_ap_continue <= ap_const_logic_1;
    blendOpt83_Block_pr_U0_ap_start <= ((ap_sync_reg_blendOpt83_Block_pr_U0_ap_ready xor ap_const_logic_1) and ap_start);
    blendOpt83_Block_pr_U0_start_full_n <= ap_const_logic_1;
    blendOpt83_Block_pr_U0_start_write <= ap_const_logic_0;
    blendOpt83_Loop_1_pr_U0_ap_continue <= ap_const_logic_1;
    blendOpt83_Loop_1_pr_U0_ap_start <= ((ap_sync_reg_blendOpt83_Loop_1_pr_U0_ap_ready xor ap_const_logic_1) and ap_start);
    blendOpt83_Loop_2_pr_U0_ap_continue <= ap_continue;
    blendOpt83_Loop_2_pr_U0_ap_start <= start_for_blendOpt83_Loop_2_pr_U0_empty_n;
    blendOpt83_Loop_2_pr_U0_start_full_n <= ap_const_logic_1;
    blendOpt83_Loop_2_pr_U0_start_write <= ap_const_logic_0;
    imageA_cols_read <= blendOpt83_Block_pr_U0_imageA_cols_read;
    imageA_data_V_read <= blendOpt83_Loop_1_pr_U0_imageA_data_V_read;
    imageA_rows_read <= blendOpt83_Block_pr_U0_imageA_rows_read;
    imageB_data_V_read <= blendOpt83_Loop_1_pr_U0_imageB_data_V_read;
    imageS_data_V_din <= blendOpt83_Loop_2_pr_U0_imageS_data_V_din;
    imageS_data_V_write <= blendOpt83_Loop_2_pr_U0_imageS_data_V_write;
    start_for_blendOpt83_Loop_2_pr_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFPyrDownGaussianBlu_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xFPyrDownGaussianBlu_U0_ap_continue <= ap_const_logic_1;
    xFPyrDownGaussianBlu_U0_ap_start <= start_for_xFPyrDownGaussianBlu_U0_empty_n;
end behav;
