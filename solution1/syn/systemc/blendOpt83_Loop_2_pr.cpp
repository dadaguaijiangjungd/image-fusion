// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "blendOpt83_Loop_2_pr.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic blendOpt83_Loop_2_pr::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic blendOpt83_Loop_2_pr::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> blendOpt83_Loop_2_pr::ap_ST_fsm_state1 = "1";
const sc_lv<4> blendOpt83_Loop_2_pr::ap_ST_fsm_state2 = "10";
const sc_lv<4> blendOpt83_Loop_2_pr::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> blendOpt83_Loop_2_pr::ap_ST_fsm_state5 = "1000";
const sc_lv<32> blendOpt83_Loop_2_pr::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool blendOpt83_Loop_2_pr::ap_const_boolean_1 = true;
const sc_lv<32> blendOpt83_Loop_2_pr::ap_const_lv32_2 = "10";
const bool blendOpt83_Loop_2_pr::ap_const_boolean_0 = false;
const sc_lv<1> blendOpt83_Loop_2_pr::ap_const_lv1_0 = "0";
const sc_lv<32> blendOpt83_Loop_2_pr::ap_const_lv32_1 = "1";
const sc_lv<1> blendOpt83_Loop_2_pr::ap_const_lv1_1 = "1";
const sc_lv<21> blendOpt83_Loop_2_pr::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<21> blendOpt83_Loop_2_pr::ap_const_lv21_1 = "1";
const sc_lv<32> blendOpt83_Loop_2_pr::ap_const_lv32_3 = "11";

blendOpt83_Loop_2_pr::blendOpt83_Loop_2_pr(sc_module_name name) : sc_module(name), mVcdFile(0) {
    call_ln496_write_r_fu_81 = new write_r("call_ln496_write_r_fu_81");
    call_ln496_write_r_fu_81->ap_clk(ap_clk);
    call_ln496_write_r_fu_81->ap_rst(ap_rst);
    call_ln496_write_r_fu_81->ap_start(call_ln496_write_r_fu_81_ap_start);
    call_ln496_write_r_fu_81->ap_done(call_ln496_write_r_fu_81_ap_done);
    call_ln496_write_r_fu_81->ap_idle(call_ln496_write_r_fu_81_ap_idle);
    call_ln496_write_r_fu_81->ap_ready(call_ln496_write_r_fu_81_ap_ready);
    call_ln496_write_r_fu_81->val_V(p_imageS_out_V_V_dout);
    call_ln496_write_r_fu_81->Mat_0_480_640_1_data_V_addr_din(call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_din);
    call_ln496_write_r_fu_81->Mat_0_480_640_1_data_V_addr_full_n(imageS_data_V_full_n);
    call_ln496_write_r_fu_81->Mat_0_480_640_1_data_V_addr_write(call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_write);
    call_ln496_write_r_fu_81->Mat_0_480_640_1_data_V_addr_blk_n(call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n);
    call_ln496_write_r_fu_81->ap_ce(call_ln496_write_r_fu_81_ap_ce);
    blendTop_mul_mul_bkb_U183 = new blendTop_mul_mul_bkb<1,1,11,10,21>("blendTop_mul_mul_bkb_U183");
    blendTop_mul_mul_bkb_U183->din0(bound_fu_106_p0);
    blendTop_mul_mul_bkb_U183->din1(bound_fu_106_p1);
    blendTop_mul_mul_bkb_U183->dout(bound_fu_106_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln488_fu_100_p2);
    sensitive << ( indvar_flatten_reg_70 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( p_imageS_out_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln488_reg_127 );
    sensitive << ( call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n );

    SC_METHOD(thread_ap_block_pp0_stage0_11001_ignoreCallOp24);
    sensitive << ( p_imageS_out_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln488_reg_127 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( p_imageS_out_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln488_reg_127 );
    sensitive << ( call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( imageA_rows_load3_loc_empty_n );
    sensitive << ( imageA_cols_load4_loc_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0_ignore_call4);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( p_imageS_out_V_V_empty_n );
    sensitive << ( icmp_ln488_reg_127 );
    sensitive << ( call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1_ignore_call4);
    sensitive << ( p_imageS_out_V_V_empty_n );
    sensitive << ( icmp_ln488_reg_127 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln488_fu_95_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bound_fu_106_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_fu_106_p00 );

    SC_METHOD(thread_bound_fu_106_p00);
    sensitive << ( imageA_cols_load4_lo_reg_117 );

    SC_METHOD(thread_bound_fu_106_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_fu_106_p10 );

    SC_METHOD(thread_bound_fu_106_p10);
    sensitive << ( imageA_rows_load3_lo_reg_112 );

    SC_METHOD(thread_call_ln496_write_r_fu_81_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001_ignoreCallOp24 );

    SC_METHOD(thread_call_ln496_write_r_fu_81_ap_start);
    sensitive << ( call_ln496_write_r_fu_81_ap_start_reg );

    SC_METHOD(thread_icmp_ln488_fu_95_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_70 );
    sensitive << ( bound_reg_122 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_imageA_cols_load4_loc_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( imageA_cols_load4_loc_empty_n );

    SC_METHOD(thread_imageA_cols_load4_loc_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( imageA_rows_load3_loc_empty_n );
    sensitive << ( imageA_cols_load4_loc_empty_n );

    SC_METHOD(thread_imageA_rows_load3_loc_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( imageA_rows_load3_loc_empty_n );

    SC_METHOD(thread_imageA_rows_load3_loc_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( imageA_rows_load3_loc_empty_n );
    sensitive << ( imageA_cols_load4_loc_empty_n );

    SC_METHOD(thread_imageS_data_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln488_reg_127 );
    sensitive << ( call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n );

    SC_METHOD(thread_imageS_data_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln488_reg_127 );
    sensitive << ( call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_din );

    SC_METHOD(thread_imageS_data_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln488_reg_127 );
    sensitive << ( call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_write );

    SC_METHOD(thread_p_imageS_out_V_V_blk_n);
    sensitive << ( p_imageS_out_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln488_reg_127 );

    SC_METHOD(thread_p_imageS_out_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln488_reg_127 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( imageA_rows_load3_loc_empty_n );
    sensitive << ( imageA_cols_load4_loc_empty_n );
    sensitive << ( icmp_ln488_fu_95_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    call_ln496_write_r_fu_81_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "blendOpt83_Loop_2_pr_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, imageA_rows_load3_loc_dout, "(port)imageA_rows_load3_loc_dout");
    sc_trace(mVcdFile, imageA_rows_load3_loc_empty_n, "(port)imageA_rows_load3_loc_empty_n");
    sc_trace(mVcdFile, imageA_rows_load3_loc_read, "(port)imageA_rows_load3_loc_read");
    sc_trace(mVcdFile, imageA_cols_load4_loc_dout, "(port)imageA_cols_load4_loc_dout");
    sc_trace(mVcdFile, imageA_cols_load4_loc_empty_n, "(port)imageA_cols_load4_loc_empty_n");
    sc_trace(mVcdFile, imageA_cols_load4_loc_read, "(port)imageA_cols_load4_loc_read");
    sc_trace(mVcdFile, p_imageS_out_V_V_dout, "(port)p_imageS_out_V_V_dout");
    sc_trace(mVcdFile, p_imageS_out_V_V_empty_n, "(port)p_imageS_out_V_V_empty_n");
    sc_trace(mVcdFile, p_imageS_out_V_V_read, "(port)p_imageS_out_V_V_read");
    sc_trace(mVcdFile, imageS_data_V_din, "(port)imageS_data_V_din");
    sc_trace(mVcdFile, imageS_data_V_full_n, "(port)imageS_data_V_full_n");
    sc_trace(mVcdFile, imageS_data_V_write, "(port)imageS_data_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, imageA_rows_load3_loc_blk_n, "imageA_rows_load3_loc_blk_n");
    sc_trace(mVcdFile, imageA_cols_load4_loc_blk_n, "imageA_cols_load4_loc_blk_n");
    sc_trace(mVcdFile, p_imageS_out_V_V_blk_n, "p_imageS_out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln488_reg_127, "icmp_ln488_reg_127");
    sc_trace(mVcdFile, call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n, "call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n");
    sc_trace(mVcdFile, imageS_data_V_blk_n, "imageS_data_V_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_70, "indvar_flatten_reg_70");
    sc_trace(mVcdFile, imageA_rows_load3_lo_reg_112, "imageA_rows_load3_lo_reg_112");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, imageA_cols_load4_lo_reg_117, "imageA_cols_load4_lo_reg_117");
    sc_trace(mVcdFile, bound_fu_106_p2, "bound_fu_106_p2");
    sc_trace(mVcdFile, bound_reg_122, "bound_reg_122");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln488_fu_95_p2, "icmp_ln488_fu_95_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln488_fu_100_p2, "add_ln488_fu_100_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, call_ln496_write_r_fu_81_ap_start, "call_ln496_write_r_fu_81_ap_start");
    sc_trace(mVcdFile, call_ln496_write_r_fu_81_ap_done, "call_ln496_write_r_fu_81_ap_done");
    sc_trace(mVcdFile, call_ln496_write_r_fu_81_ap_idle, "call_ln496_write_r_fu_81_ap_idle");
    sc_trace(mVcdFile, call_ln496_write_r_fu_81_ap_ready, "call_ln496_write_r_fu_81_ap_ready");
    sc_trace(mVcdFile, call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_din, "call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_din");
    sc_trace(mVcdFile, call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_write, "call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_write");
    sc_trace(mVcdFile, call_ln496_write_r_fu_81_ap_ce, "call_ln496_write_r_fu_81_ap_ce");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0_ignore_call4, "ap_block_state3_pp0_stage0_iter0_ignore_call4");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1_ignore_call4, "ap_block_state4_pp0_stage0_iter1_ignore_call4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001_ignoreCallOp24, "ap_block_pp0_stage0_11001_ignoreCallOp24");
    sc_trace(mVcdFile, call_ln496_write_r_fu_81_ap_start_reg, "call_ln496_write_r_fu_81_ap_start_reg");
    sc_trace(mVcdFile, bound_fu_106_p0, "bound_fu_106_p0");
    sc_trace(mVcdFile, bound_fu_106_p1, "bound_fu_106_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_106_p00, "bound_fu_106_p00");
    sc_trace(mVcdFile, bound_fu_106_p10, "bound_fu_106_p10");
#endif

    }
}

blendOpt83_Loop_2_pr::~blendOpt83_Loop_2_pr() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete call_ln496_write_r_fu_81;
    delete blendTop_mul_mul_bkb_U183;
}

void blendOpt83_Loop_2_pr::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        call_ln496_write_r_fu_81_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln488_fu_95_p2.read()))) {
            call_ln496_write_r_fu_81_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, call_ln496_write_r_fu_81_ap_ready.read())) {
            call_ln496_write_r_fu_81_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln488_fu_95_p2.read()))) {
        indvar_flatten_reg_70 = add_ln488_fu_100_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvar_flatten_reg_70 = ap_const_lv21_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bound_reg_122 = bound_fu_106_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln488_reg_127 = icmp_ln488_fu_95_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imageA_rows_load3_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imageA_cols_load4_loc_empty_n.read())))) {
        imageA_cols_load4_lo_reg_117 = imageA_cols_load4_loc_dout.read();
        imageA_rows_load3_lo_reg_112 = imageA_rows_load3_loc_dout.read();
    }
}

void blendOpt83_Loop_2_pr::thread_add_ln488_fu_100_p2() {
    add_ln488_fu_100_p2 = (!indvar_flatten_reg_70.read().is_01() || !ap_const_lv21_1.is_01())? sc_lv<21>(): (sc_biguint<21>(indvar_flatten_reg_70.read()) + sc_biguint<21>(ap_const_lv21_1));
}

void blendOpt83_Loop_2_pr::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void blendOpt83_Loop_2_pr::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void blendOpt83_Loop_2_pr::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void blendOpt83_Loop_2_pr::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void blendOpt83_Loop_2_pr::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void blendOpt83_Loop_2_pr::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_imageS_out_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n.read()))));
}

void blendOpt83_Loop_2_pr::thread_ap_block_pp0_stage0_11001_ignoreCallOp24() {
    ap_block_pp0_stage0_11001_ignoreCallOp24 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, p_imageS_out_V_V_empty_n.read()));
}

void blendOpt83_Loop_2_pr::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_imageS_out_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n.read()))));
}

void blendOpt83_Loop_2_pr::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imageA_rows_load3_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imageA_cols_load4_loc_empty_n.read()));
}

void blendOpt83_Loop_2_pr::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void blendOpt83_Loop_2_pr::thread_ap_block_state3_pp0_stage0_iter0_ignore_call4() {
    ap_block_state3_pp0_stage0_iter0_ignore_call4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void blendOpt83_Loop_2_pr::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_imageS_out_V_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n.read())));
}

void blendOpt83_Loop_2_pr::thread_ap_block_state4_pp0_stage0_iter1_ignore_call4() {
    ap_block_state4_pp0_stage0_iter1_ignore_call4 = (esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, p_imageS_out_V_V_empty_n.read()));
}

void blendOpt83_Loop_2_pr::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln488_fu_95_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void blendOpt83_Loop_2_pr::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void blendOpt83_Loop_2_pr::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void blendOpt83_Loop_2_pr::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void blendOpt83_Loop_2_pr::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void blendOpt83_Loop_2_pr::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void blendOpt83_Loop_2_pr::thread_bound_fu_106_p0() {
    bound_fu_106_p0 =  (sc_lv<11>) (bound_fu_106_p00.read());
}

void blendOpt83_Loop_2_pr::thread_bound_fu_106_p00() {
    bound_fu_106_p00 = esl_zext<21,11>(imageA_cols_load4_lo_reg_117.read());
}

void blendOpt83_Loop_2_pr::thread_bound_fu_106_p1() {
    bound_fu_106_p1 =  (sc_lv<10>) (bound_fu_106_p10.read());
}

void blendOpt83_Loop_2_pr::thread_bound_fu_106_p10() {
    bound_fu_106_p10 = esl_zext<21,10>(imageA_rows_load3_lo_reg_112.read());
}

void blendOpt83_Loop_2_pr::thread_call_ln496_write_r_fu_81_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001_ignoreCallOp24.read(), ap_const_boolean_0))) {
        call_ln496_write_r_fu_81_ap_ce = ap_const_logic_1;
    } else {
        call_ln496_write_r_fu_81_ap_ce = ap_const_logic_0;
    }
}

void blendOpt83_Loop_2_pr::thread_call_ln496_write_r_fu_81_ap_start() {
    call_ln496_write_r_fu_81_ap_start = call_ln496_write_r_fu_81_ap_start_reg.read();
}

void blendOpt83_Loop_2_pr::thread_icmp_ln488_fu_95_p2() {
    icmp_ln488_fu_95_p2 = (!indvar_flatten_reg_70.read().is_01() || !bound_reg_122.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_70.read() == bound_reg_122.read());
}

void blendOpt83_Loop_2_pr::thread_imageA_cols_load4_loc_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        imageA_cols_load4_loc_blk_n = imageA_cols_load4_loc_empty_n.read();
    } else {
        imageA_cols_load4_loc_blk_n = ap_const_logic_1;
    }
}

void blendOpt83_Loop_2_pr::thread_imageA_cols_load4_loc_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imageA_rows_load3_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imageA_cols_load4_loc_empty_n.read())))) {
        imageA_cols_load4_loc_read = ap_const_logic_1;
    } else {
        imageA_cols_load4_loc_read = ap_const_logic_0;
    }
}

void blendOpt83_Loop_2_pr::thread_imageA_rows_load3_loc_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        imageA_rows_load3_loc_blk_n = imageA_rows_load3_loc_empty_n.read();
    } else {
        imageA_rows_load3_loc_blk_n = ap_const_logic_1;
    }
}

void blendOpt83_Loop_2_pr::thread_imageA_rows_load3_loc_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imageA_rows_load3_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imageA_cols_load4_loc_empty_n.read())))) {
        imageA_rows_load3_loc_read = ap_const_logic_1;
    } else {
        imageA_rows_load3_loc_read = ap_const_logic_0;
    }
}

void blendOpt83_Loop_2_pr::thread_imageS_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0))) {
        imageS_data_V_blk_n = call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_blk_n.read();
    } else {
        imageS_data_V_blk_n = ap_const_logic_1;
    }
}

void blendOpt83_Loop_2_pr::thread_imageS_data_V_din() {
    imageS_data_V_din = call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_din.read();
}

void blendOpt83_Loop_2_pr::thread_imageS_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0))) {
        imageS_data_V_write = call_ln496_write_r_fu_81_Mat_0_480_640_1_data_V_addr_write.read();
    } else {
        imageS_data_V_write = ap_const_logic_0;
    }
}

void blendOpt83_Loop_2_pr::thread_p_imageS_out_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0))) {
        p_imageS_out_V_V_blk_n = p_imageS_out_V_V_empty_n.read();
    } else {
        p_imageS_out_V_V_blk_n = ap_const_logic_1;
    }
}

void blendOpt83_Loop_2_pr::thread_p_imageS_out_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln488_reg_127.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_imageS_out_V_V_read = ap_const_logic_1;
    } else {
        p_imageS_out_V_V_read = ap_const_logic_0;
    }
}

void blendOpt83_Loop_2_pr::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imageA_rows_load3_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imageA_cols_load4_loc_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln488_fu_95_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln488_fu_95_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

