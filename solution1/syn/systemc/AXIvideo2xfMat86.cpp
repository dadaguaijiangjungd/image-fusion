// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AXIvideo2xfMat86.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AXIvideo2xfMat86::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AXIvideo2xfMat86::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> AXIvideo2xfMat86::ap_ST_fsm_state1 = "1";
const sc_lv<8> AXIvideo2xfMat86::ap_ST_fsm_state2 = "10";
const sc_lv<8> AXIvideo2xfMat86::ap_ST_fsm_state3 = "100";
const sc_lv<8> AXIvideo2xfMat86::ap_ST_fsm_state4 = "1000";
const sc_lv<8> AXIvideo2xfMat86::ap_ST_fsm_pp1_stage0 = "10000";
const sc_lv<8> AXIvideo2xfMat86::ap_ST_fsm_state7 = "100000";
const sc_lv<8> AXIvideo2xfMat86::ap_ST_fsm_state8 = "1000000";
const sc_lv<8> AXIvideo2xfMat86::ap_ST_fsm_state9 = "10000000";
const sc_lv<32> AXIvideo2xfMat86::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool AXIvideo2xfMat86::ap_const_boolean_1 = true;
const sc_lv<1> AXIvideo2xfMat86::ap_const_lv1_0 = "0";
const sc_lv<1> AXIvideo2xfMat86::ap_const_lv1_1 = "1";
const sc_lv<2> AXIvideo2xfMat86::ap_const_lv2_0 = "00";
const sc_lv<2> AXIvideo2xfMat86::ap_const_lv2_2 = "10";
const sc_lv<2> AXIvideo2xfMat86::ap_const_lv2_3 = "11";
const sc_lv<2> AXIvideo2xfMat86::ap_const_lv2_1 = "1";
const sc_lv<32> AXIvideo2xfMat86::ap_const_lv32_1 = "1";
const sc_lv<32> AXIvideo2xfMat86::ap_const_lv32_4 = "100";
const bool AXIvideo2xfMat86::ap_const_boolean_0 = false;
const sc_lv<32> AXIvideo2xfMat86::ap_const_lv32_6 = "110";
const sc_lv<32> AXIvideo2xfMat86::ap_const_lv32_3 = "11";
const sc_lv<32> AXIvideo2xfMat86::ap_const_lv32_7 = "111";
const sc_lv<10> AXIvideo2xfMat86::ap_const_lv10_280 = "1010000000";
const sc_lv<32> AXIvideo2xfMat86::ap_const_lv32_2 = "10";
const sc_lv<19> AXIvideo2xfMat86::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<9> AXIvideo2xfMat86::ap_const_lv9_0 = "000000000";
const sc_lv<32> AXIvideo2xfMat86::ap_const_lv32_5 = "101";
const sc_lv<9> AXIvideo2xfMat86::ap_const_lv9_1E0 = "111100000";
const sc_lv<9> AXIvideo2xfMat86::ap_const_lv9_1 = "1";
const sc_lv<19> AXIvideo2xfMat86::ap_const_lv19_280 = "1010000000";
const sc_lv<19> AXIvideo2xfMat86::ap_const_lv19_1 = "1";

AXIvideo2xfMat86::AXIvideo2xfMat86(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXI_video_strm_V_data_V_0_ack_in);
    sensitive << ( AXI_video_strm_V_data_V_0_state );

    SC_METHOD(thread_AXI_video_strm_V_data_V_0_ack_out);
    sensitive << ( AXI_video_strm_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_predicate_op51_read_state5 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( eol_2_reg_256 );

    SC_METHOD(thread_AXI_video_strm_V_data_V_0_data_out);
    sensitive << ( AXI_video_strm_V_data_V_0_payload_A );
    sensitive << ( AXI_video_strm_V_data_V_0_payload_B );
    sensitive << ( AXI_video_strm_V_data_V_0_sel );

    SC_METHOD(thread_AXI_video_strm_V_data_V_0_load_A);
    sensitive << ( AXI_video_strm_V_data_V_0_sel_wr );
    sensitive << ( AXI_video_strm_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_data_V_0_load_B);
    sensitive << ( AXI_video_strm_V_data_V_0_sel_wr );
    sensitive << ( AXI_video_strm_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_data_V_0_sel);
    sensitive << ( AXI_video_strm_V_data_V_0_sel_rd );

    SC_METHOD(thread_AXI_video_strm_V_data_V_0_state_cmp_full);
    sensitive << ( AXI_video_strm_V_data_V_0_state );

    SC_METHOD(thread_AXI_video_strm_V_data_V_0_vld_in);
    sensitive << ( p_pyrLB0_TVALID );

    SC_METHOD(thread_AXI_video_strm_V_data_V_0_vld_out);
    sensitive << ( AXI_video_strm_V_data_V_0_state );

    SC_METHOD(thread_AXI_video_strm_V_dest_V_0_ack_out);
    sensitive << ( AXI_video_strm_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_predicate_op51_read_state5 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( eol_2_reg_256 );

    SC_METHOD(thread_AXI_video_strm_V_dest_V_0_vld_in);
    sensitive << ( p_pyrLB0_TVALID );

    SC_METHOD(thread_AXI_video_strm_V_last_V_0_ack_in);
    sensitive << ( AXI_video_strm_V_last_V_0_state );

    SC_METHOD(thread_AXI_video_strm_V_last_V_0_ack_out);
    sensitive << ( AXI_video_strm_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_predicate_op51_read_state5 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( eol_2_reg_256 );

    SC_METHOD(thread_AXI_video_strm_V_last_V_0_data_out);
    sensitive << ( AXI_video_strm_V_last_V_0_payload_A );
    sensitive << ( AXI_video_strm_V_last_V_0_payload_B );
    sensitive << ( AXI_video_strm_V_last_V_0_sel );

    SC_METHOD(thread_AXI_video_strm_V_last_V_0_load_A);
    sensitive << ( AXI_video_strm_V_last_V_0_sel_wr );
    sensitive << ( AXI_video_strm_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_last_V_0_load_B);
    sensitive << ( AXI_video_strm_V_last_V_0_sel_wr );
    sensitive << ( AXI_video_strm_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_last_V_0_sel);
    sensitive << ( AXI_video_strm_V_last_V_0_sel_rd );

    SC_METHOD(thread_AXI_video_strm_V_last_V_0_state_cmp_full);
    sensitive << ( AXI_video_strm_V_last_V_0_state );

    SC_METHOD(thread_AXI_video_strm_V_last_V_0_vld_in);
    sensitive << ( p_pyrLB0_TVALID );

    SC_METHOD(thread_AXI_video_strm_V_last_V_0_vld_out);
    sensitive << ( AXI_video_strm_V_last_V_0_state );

    SC_METHOD(thread_AXI_video_strm_V_user_V_0_ack_in);
    sensitive << ( AXI_video_strm_V_user_V_0_state );

    SC_METHOD(thread_AXI_video_strm_V_user_V_0_ack_out);
    sensitive << ( AXI_video_strm_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_predicate_op51_read_state5 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( eol_2_reg_256 );

    SC_METHOD(thread_AXI_video_strm_V_user_V_0_data_out);
    sensitive << ( AXI_video_strm_V_user_V_0_payload_A );
    sensitive << ( AXI_video_strm_V_user_V_0_payload_B );
    sensitive << ( AXI_video_strm_V_user_V_0_sel );

    SC_METHOD(thread_AXI_video_strm_V_user_V_0_load_A);
    sensitive << ( AXI_video_strm_V_user_V_0_sel_wr );
    sensitive << ( AXI_video_strm_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_user_V_0_load_B);
    sensitive << ( AXI_video_strm_V_user_V_0_sel_wr );
    sensitive << ( AXI_video_strm_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_user_V_0_sel);
    sensitive << ( AXI_video_strm_V_user_V_0_sel_rd );

    SC_METHOD(thread_AXI_video_strm_V_user_V_0_state_cmp_full);
    sensitive << ( AXI_video_strm_V_user_V_0_state );

    SC_METHOD(thread_AXI_video_strm_V_user_V_0_vld_in);
    sensitive << ( p_pyrLB0_TVALID );

    SC_METHOD(thread_AXI_video_strm_V_user_V_0_vld_out);
    sensitive << ( AXI_video_strm_V_user_V_0_state );

    SC_METHOD(thread_add_ln127_fu_333_p2);
    sensitive << ( indvars_iv_reg_107 );

    SC_METHOD(thread_add_ln151_fu_322_p2);
    sensitive << ( val_assign_reg_184 );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( AXI_video_strm_V_data_V_0_vld_out );
    sensitive << ( img_data_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_373 );
    sensitive << ( ap_predicate_op51_read_state5 );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( AXI_video_strm_V_data_V_0_vld_out );
    sensitive << ( img_data_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_373 );
    sensitive << ( ap_predicate_op51_read_state5 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( AXI_video_strm_V_data_V_0_vld_out );
    sensitive << ( img_data_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_373 );
    sensitive << ( ap_predicate_op51_read_state5 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter0);
    sensitive << ( AXI_video_strm_V_data_V_0_vld_out );
    sensitive << ( ap_predicate_op51_read_state5 );

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter1);
    sensitive << ( img_data_V_full_n );
    sensitive << ( icmp_ln129_reg_373 );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( AXI_video_strm_V_data_V_0_vld_out );
    sensitive << ( eol_2_reg_256 );

    SC_METHOD(thread_ap_condition_535);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state5);
    sensitive << ( icmp_ln129_fu_307_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( icmp_ln127_fu_285_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_axi_data_V_1_phi_fu_176_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_373 );
    sensitive << ( axi_data_V_1_reg_173 );
    sensitive << ( p_Val2_s_reg_219 );

    SC_METHOD(thread_ap_phi_mux_eol_0_phi_fu_198_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_373 );
    sensitive << ( eol_0_reg_194 );
    sensitive << ( axi_last_V_2_reg_206 );

    SC_METHOD(thread_ap_phi_mux_eol_2_phi_fu_259_p4);
    sensitive << ( eol_2_reg_256 );

    SC_METHOD(thread_ap_phi_mux_eol_phi_fu_165_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_373 );
    sensitive << ( eol_reg_162 );
    sensitive << ( axi_last_V_2_reg_206 );

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_axi_last_V_2_reg_206);

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_p_Val2_s_reg_219);

    SC_METHOD(thread_ap_predicate_op51_read_state5);
    sensitive << ( icmp_ln129_fu_307_p2 );
    sensitive << ( or_ln132_fu_316_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln127_fu_285_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_i_fu_291_p2);
    sensitive << ( i_0_reg_151 );

    SC_METHOD(thread_icmp_ln127_fu_285_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_151 );

    SC_METHOD(thread_icmp_ln129_fu_307_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( indvars_iv_reg_107 );
    sensitive << ( trunc_ln129_fu_303_p1 );

    SC_METHOD(thread_img_data_V_blk_n);
    sensitive << ( img_data_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_373 );

    SC_METHOD(thread_img_data_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_373 );
    sensitive << ( p_Val2_s_reg_219 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_373 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_or_ln132_fu_316_p2);
    sensitive << ( ap_phi_mux_eol_0_phi_fu_198_p4 );
    sensitive << ( sof_1_fu_78 );

    SC_METHOD(thread_p_pyrLB0_TDATA_blk_n);
    sensitive << ( AXI_video_strm_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln129_fu_307_p2 );
    sensitive << ( or_ln132_fu_316_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( eol_2_reg_256 );

    SC_METHOD(thread_p_pyrLB0_TREADY);
    sensitive << ( AXI_video_strm_V_dest_V_0_state );

    SC_METHOD(thread_tmp_user_V_fu_276_p1);
    sensitive << ( AXI_video_strm_V_user_V_0_data_out );

    SC_METHOD(thread_trunc_ln129_fu_303_p1);
    sensitive << ( val_assign_reg_184 );

    SC_METHOD(thread_val_fu_297_p2);
    sensitive << ( val_0_reg_139 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( AXI_video_strm_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln129_fu_307_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_phi_mux_eol_2_phi_fu_259_p4 );
    sensitive << ( icmp_ln127_fu_285_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( eol_2_reg_256 );
    sensitive << ( tmp_user_V_fu_276_p1 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    AXI_video_strm_V_data_V_0_sel_rd = SC_LOGIC_0;
    AXI_video_strm_V_data_V_0_sel_wr = SC_LOGIC_0;
    AXI_video_strm_V_data_V_0_state = "00";
    AXI_video_strm_V_user_V_0_sel_rd = SC_LOGIC_0;
    AXI_video_strm_V_user_V_0_sel_wr = SC_LOGIC_0;
    AXI_video_strm_V_user_V_0_state = "00";
    AXI_video_strm_V_last_V_0_sel_rd = SC_LOGIC_0;
    AXI_video_strm_V_last_V_0_sel_wr = SC_LOGIC_0;
    AXI_video_strm_V_last_V_0_state = "00";
    AXI_video_strm_V_dest_V_0_state = "00";
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AXIvideo2xfMat86_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_pyrLB0_TDATA, "(port)p_pyrLB0_TDATA");
    sc_trace(mVcdFile, p_pyrLB0_TVALID, "(port)p_pyrLB0_TVALID");
    sc_trace(mVcdFile, p_pyrLB0_TREADY, "(port)p_pyrLB0_TREADY");
    sc_trace(mVcdFile, p_pyrLB0_TKEEP, "(port)p_pyrLB0_TKEEP");
    sc_trace(mVcdFile, p_pyrLB0_TSTRB, "(port)p_pyrLB0_TSTRB");
    sc_trace(mVcdFile, p_pyrLB0_TUSER, "(port)p_pyrLB0_TUSER");
    sc_trace(mVcdFile, p_pyrLB0_TLAST, "(port)p_pyrLB0_TLAST");
    sc_trace(mVcdFile, p_pyrLB0_TID, "(port)p_pyrLB0_TID");
    sc_trace(mVcdFile, p_pyrLB0_TDEST, "(port)p_pyrLB0_TDEST");
    sc_trace(mVcdFile, img_data_V_din, "(port)img_data_V_din");
    sc_trace(mVcdFile, img_data_V_full_n, "(port)img_data_V_full_n");
    sc_trace(mVcdFile, img_data_V_write, "(port)img_data_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_data_out, "AXI_video_strm_V_data_V_0_data_out");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_vld_in, "AXI_video_strm_V_data_V_0_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_vld_out, "AXI_video_strm_V_data_V_0_vld_out");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_ack_in, "AXI_video_strm_V_data_V_0_ack_in");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_ack_out, "AXI_video_strm_V_data_V_0_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_payload_A, "AXI_video_strm_V_data_V_0_payload_A");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_payload_B, "AXI_video_strm_V_data_V_0_payload_B");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_sel_rd, "AXI_video_strm_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_sel_wr, "AXI_video_strm_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_sel, "AXI_video_strm_V_data_V_0_sel");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_load_A, "AXI_video_strm_V_data_V_0_load_A");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_load_B, "AXI_video_strm_V_data_V_0_load_B");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_state, "AXI_video_strm_V_data_V_0_state");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_0_state_cmp_full, "AXI_video_strm_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_data_out, "AXI_video_strm_V_user_V_0_data_out");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_vld_in, "AXI_video_strm_V_user_V_0_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_vld_out, "AXI_video_strm_V_user_V_0_vld_out");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_ack_in, "AXI_video_strm_V_user_V_0_ack_in");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_ack_out, "AXI_video_strm_V_user_V_0_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_payload_A, "AXI_video_strm_V_user_V_0_payload_A");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_payload_B, "AXI_video_strm_V_user_V_0_payload_B");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_sel_rd, "AXI_video_strm_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_sel_wr, "AXI_video_strm_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_sel, "AXI_video_strm_V_user_V_0_sel");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_load_A, "AXI_video_strm_V_user_V_0_load_A");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_load_B, "AXI_video_strm_V_user_V_0_load_B");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_state, "AXI_video_strm_V_user_V_0_state");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_0_state_cmp_full, "AXI_video_strm_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_data_out, "AXI_video_strm_V_last_V_0_data_out");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_vld_in, "AXI_video_strm_V_last_V_0_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_vld_out, "AXI_video_strm_V_last_V_0_vld_out");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_ack_in, "AXI_video_strm_V_last_V_0_ack_in");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_ack_out, "AXI_video_strm_V_last_V_0_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_payload_A, "AXI_video_strm_V_last_V_0_payload_A");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_payload_B, "AXI_video_strm_V_last_V_0_payload_B");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_sel_rd, "AXI_video_strm_V_last_V_0_sel_rd");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_sel_wr, "AXI_video_strm_V_last_V_0_sel_wr");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_sel, "AXI_video_strm_V_last_V_0_sel");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_load_A, "AXI_video_strm_V_last_V_0_load_A");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_load_B, "AXI_video_strm_V_last_V_0_load_B");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_state, "AXI_video_strm_V_last_V_0_state");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_0_state_cmp_full, "AXI_video_strm_V_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_0_vld_in, "AXI_video_strm_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_0_ack_out, "AXI_video_strm_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_0_state, "AXI_video_strm_V_dest_V_0_state");
    sc_trace(mVcdFile, p_pyrLB0_TDATA_blk_n, "p_pyrLB0_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln129_fu_307_p2, "icmp_ln129_fu_307_p2");
    sc_trace(mVcdFile, or_ln132_fu_316_p2, "or_ln132_fu_316_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_phi_mux_eol_2_phi_fu_259_p4, "ap_phi_mux_eol_2_phi_fu_259_p4");
    sc_trace(mVcdFile, img_data_V_blk_n, "img_data_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, icmp_ln129_reg_373, "icmp_ln129_reg_373");
    sc_trace(mVcdFile, eol_reg_162, "eol_reg_162");
    sc_trace(mVcdFile, axi_data_V_1_reg_173, "axi_data_V_1_reg_173");
    sc_trace(mVcdFile, val_assign_reg_184, "val_assign_reg_184");
    sc_trace(mVcdFile, eol_0_reg_194, "eol_0_reg_194");
    sc_trace(mVcdFile, axi_last_V_2_reg_206, "axi_last_V_2_reg_206");
    sc_trace(mVcdFile, p_Val2_s_reg_219, "p_Val2_s_reg_219");
    sc_trace(mVcdFile, tmp_data_V_reg_339, "tmp_data_V_reg_339");
    sc_trace(mVcdFile, tmp_last_V_reg_347, "tmp_last_V_reg_347");
    sc_trace(mVcdFile, icmp_ln127_fu_285_p2, "icmp_ln127_fu_285_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_fu_291_p2, "i_fu_291_p2");
    sc_trace(mVcdFile, i_reg_363, "i_reg_363");
    sc_trace(mVcdFile, val_fu_297_p2, "val_fu_297_p2");
    sc_trace(mVcdFile, val_reg_368, "val_reg_368");
    sc_trace(mVcdFile, ap_predicate_op51_read_state5, "ap_predicate_op51_read_state5");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter0, "ap_block_state5_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter1, "ap_block_state6_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, add_ln151_fu_322_p2, "add_ln151_fu_322_p2");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, add_ln127_fu_333_p2, "add_ln127_fu_333_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state5, "ap_condition_pp1_exit_iter0_state5");
    sc_trace(mVcdFile, indvars_iv_reg_107, "indvars_iv_reg_107");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, axi_last_V_3_reg_232, "axi_last_V_3_reg_232");
    sc_trace(mVcdFile, axi_last_V_0_reg_119, "axi_last_V_0_reg_119");
    sc_trace(mVcdFile, axi_data_V_3_reg_244, "axi_data_V_3_reg_244");
    sc_trace(mVcdFile, axi_data_V_0_reg_129, "axi_data_V_0_reg_129");
    sc_trace(mVcdFile, val_0_reg_139, "val_0_reg_139");
    sc_trace(mVcdFile, i_0_reg_151, "i_0_reg_151");
    sc_trace(mVcdFile, ap_phi_mux_eol_phi_fu_165_p4, "ap_phi_mux_eol_phi_fu_165_p4");
    sc_trace(mVcdFile, ap_phi_mux_axi_data_V_1_phi_fu_176_p4, "ap_phi_mux_axi_data_V_1_phi_fu_176_p4");
    sc_trace(mVcdFile, ap_phi_mux_eol_0_phi_fu_198_p4, "ap_phi_mux_eol_0_phi_fu_198_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_axi_last_V_2_reg_206, "ap_phi_reg_pp1_iter0_axi_last_V_2_reg_206");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_p_Val2_s_reg_219, "ap_phi_reg_pp1_iter0_p_Val2_s_reg_219");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, eol_2_reg_256, "eol_2_reg_256");
    sc_trace(mVcdFile, sof_1_fu_78, "sof_1_fu_78");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, trunc_ln129_fu_303_p1, "trunc_ln129_fu_303_p1");
    sc_trace(mVcdFile, tmp_user_V_fu_276_p1, "tmp_user_V_fu_276_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_condition_535, "ap_condition_535");
#endif

    }
}

AXIvideo2xfMat86::~AXIvideo2xfMat86() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void AXIvideo2xfMat86::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_vld_out.read()))) {
            AXI_video_strm_V_data_V_0_sel_rd =  (sc_logic) (~AXI_video_strm_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_ack_in.read()))) {
            AXI_video_strm_V_data_V_0_sel_wr =  (sc_logic) (~AXI_video_strm_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(AXI_video_strm_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(AXI_video_strm_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            AXI_video_strm_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(AXI_video_strm_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(AXI_video_strm_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            AXI_video_strm_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(AXI_video_strm_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(AXI_video_strm_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(AXI_video_strm_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_ack_out.read()))))) {
            AXI_video_strm_V_data_V_0_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_dest_V_0_state.read())))) {
            AXI_video_strm_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_dest_V_0_state.read())))) {
            AXI_video_strm_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_0_ack_out.read()))))) {
            AXI_video_strm_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_vld_out.read()))) {
            AXI_video_strm_V_last_V_0_sel_rd =  (sc_logic) (~AXI_video_strm_V_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_ack_in.read()))) {
            AXI_video_strm_V_last_V_0_sel_wr =  (sc_logic) (~AXI_video_strm_V_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_last_V_0_state.read())))) {
            AXI_video_strm_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_last_V_0_state.read())))) {
            AXI_video_strm_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_ack_out.read()))))) {
            AXI_video_strm_V_last_V_0_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_vld_out.read()))) {
            AXI_video_strm_V_user_V_0_sel_rd =  (sc_logic) (~AXI_video_strm_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_ack_in.read()))) {
            AXI_video_strm_V_user_V_0_sel_wr =  (sc_logic) (~AXI_video_strm_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_user_V_0_state.read())))) {
            AXI_video_strm_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_user_V_0_state.read())))) {
            AXI_video_strm_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_ack_out.read()))))) {
            AXI_video_strm_V_user_V_0_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_285_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_285_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state5.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_285_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_data_V_0_reg_129 = tmp_data_V_reg_339.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        axi_data_V_0_reg_129 = axi_data_V_3_reg_244.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        axi_data_V_1_reg_173 = p_Val2_s_reg_219.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_285_p2.read()))) {
        axi_data_V_1_reg_173 = axi_data_V_0_reg_129.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_data_V_3_reg_244 = axi_data_V_1_reg_173.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read())))) {
        axi_data_V_3_reg_244 = AXI_video_strm_V_data_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_last_V_0_reg_119 = tmp_last_V_reg_347.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        axi_last_V_0_reg_119 = axi_last_V_3_reg_232.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_535.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_fu_307_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, or_ln132_fu_316_p2.read()))) {
            axi_last_V_2_reg_206 = ap_phi_mux_eol_phi_fu_165_p4.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_fu_307_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_ln132_fu_316_p2.read()))) {
            axi_last_V_2_reg_206 = AXI_video_strm_V_last_V_0_data_out.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            axi_last_V_2_reg_206 = ap_phi_reg_pp1_iter0_axi_last_V_2_reg_206.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_last_V_3_reg_232 = eol_reg_162.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read())))) {
        axi_last_V_3_reg_232 = AXI_video_strm_V_last_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_0_reg_194 = axi_last_V_2_reg_206.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_285_p2.read()))) {
        eol_0_reg_194 = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        eol_2_reg_256 = eol_0_reg_194.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read())))) {
        eol_2_reg_256 = AXI_video_strm_V_last_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_reg_162 = axi_last_V_2_reg_206.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_285_p2.read()))) {
        eol_reg_162 = axi_last_V_0_reg_119.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_151 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_0_reg_151 = i_reg_363.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        indvars_iv_reg_107 = ap_const_lv10_280;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        indvars_iv_reg_107 = add_ln127_fu_333_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_535.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_fu_307_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, or_ln132_fu_316_p2.read()))) {
            p_Val2_s_reg_219 = ap_phi_mux_axi_data_V_1_phi_fu_176_p4.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_fu_307_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_ln132_fu_316_p2.read()))) {
            p_Val2_s_reg_219 = AXI_video_strm_V_data_V_0_data_out.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            p_Val2_s_reg_219 = ap_phi_reg_pp1_iter0_p_Val2_s_reg_219.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_fu_307_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        sof_1_fu_78 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sof_1_fu_78 = ap_const_lv1_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        val_0_reg_139 = ap_const_lv19_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        val_0_reg_139 = val_reg_368.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_fu_307_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        val_assign_reg_184 = add_ln151_fu_322_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_285_p2.read()))) {
        val_assign_reg_184 = val_0_reg_139.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_load_A.read())) {
        AXI_video_strm_V_data_V_0_payload_A = p_pyrLB0_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_load_B.read())) {
        AXI_video_strm_V_data_V_0_payload_B = p_pyrLB0_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_load_A.read())) {
        AXI_video_strm_V_last_V_0_payload_A = p_pyrLB0_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_load_B.read())) {
        AXI_video_strm_V_last_V_0_payload_B = p_pyrLB0_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_load_A.read())) {
        AXI_video_strm_V_user_V_0_payload_A = p_pyrLB0_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_load_B.read())) {
        AXI_video_strm_V_user_V_0_payload_B = p_pyrLB0_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_363 = i_fu_291_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln129_reg_373 = icmp_ln129_fu_307_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(AXI_video_strm_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
        tmp_data_V_reg_339 = AXI_video_strm_V_data_V_0_data_out.read();
        tmp_last_V_reg_347 = AXI_video_strm_V_last_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_285_p2.read()))) {
        val_reg_368 = val_fu_297_p2.read();
    }
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_data_V_0_ack_in() {
    AXI_video_strm_V_data_V_0_ack_in = AXI_video_strm_V_data_V_0_state.read()[1];
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(AXI_video_strm_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        AXI_video_strm_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        AXI_video_strm_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_0_sel.read())) {
        AXI_video_strm_V_data_V_0_data_out = AXI_video_strm_V_data_V_0_payload_B.read();
    } else {
        AXI_video_strm_V_data_V_0_data_out = AXI_video_strm_V_data_V_0_payload_A.read();
    }
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_data_V_0_load_A() {
    AXI_video_strm_V_data_V_0_load_A = (AXI_video_strm_V_data_V_0_state_cmp_full.read() & ~AXI_video_strm_V_data_V_0_sel_wr.read());
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_data_V_0_load_B() {
    AXI_video_strm_V_data_V_0_load_B = (AXI_video_strm_V_data_V_0_sel_wr.read() & AXI_video_strm_V_data_V_0_state_cmp_full.read());
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_data_V_0_sel() {
    AXI_video_strm_V_data_V_0_sel = AXI_video_strm_V_data_V_0_sel_rd.read();
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_data_V_0_state_cmp_full() {
    AXI_video_strm_V_data_V_0_state_cmp_full =  (sc_logic) ((!AXI_video_strm_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(AXI_video_strm_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_data_V_0_vld_in() {
    AXI_video_strm_V_data_V_0_vld_in = p_pyrLB0_TVALID.read();
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_data_V_0_vld_out() {
    AXI_video_strm_V_data_V_0_vld_out = AXI_video_strm_V_data_V_0_state.read()[0];
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(AXI_video_strm_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        AXI_video_strm_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        AXI_video_strm_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_dest_V_0_vld_in() {
    AXI_video_strm_V_dest_V_0_vld_in = p_pyrLB0_TVALID.read();
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_last_V_0_ack_in() {
    AXI_video_strm_V_last_V_0_ack_in = AXI_video_strm_V_last_V_0_state.read()[1];
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_last_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(AXI_video_strm_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        AXI_video_strm_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        AXI_video_strm_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_0_sel.read())) {
        AXI_video_strm_V_last_V_0_data_out = AXI_video_strm_V_last_V_0_payload_B.read();
    } else {
        AXI_video_strm_V_last_V_0_data_out = AXI_video_strm_V_last_V_0_payload_A.read();
    }
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_last_V_0_load_A() {
    AXI_video_strm_V_last_V_0_load_A = (AXI_video_strm_V_last_V_0_state_cmp_full.read() & ~AXI_video_strm_V_last_V_0_sel_wr.read());
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_last_V_0_load_B() {
    AXI_video_strm_V_last_V_0_load_B = (AXI_video_strm_V_last_V_0_sel_wr.read() & AXI_video_strm_V_last_V_0_state_cmp_full.read());
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_last_V_0_sel() {
    AXI_video_strm_V_last_V_0_sel = AXI_video_strm_V_last_V_0_sel_rd.read();
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_last_V_0_state_cmp_full() {
    AXI_video_strm_V_last_V_0_state_cmp_full =  (sc_logic) ((!AXI_video_strm_V_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(AXI_video_strm_V_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_last_V_0_vld_in() {
    AXI_video_strm_V_last_V_0_vld_in = p_pyrLB0_TVALID.read();
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_last_V_0_vld_out() {
    AXI_video_strm_V_last_V_0_vld_out = AXI_video_strm_V_last_V_0_state.read()[0];
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_user_V_0_ack_in() {
    AXI_video_strm_V_user_V_0_ack_in = AXI_video_strm_V_user_V_0_state.read()[1];
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_user_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(AXI_video_strm_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        AXI_video_strm_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        AXI_video_strm_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_0_sel.read())) {
        AXI_video_strm_V_user_V_0_data_out = AXI_video_strm_V_user_V_0_payload_B.read();
    } else {
        AXI_video_strm_V_user_V_0_data_out = AXI_video_strm_V_user_V_0_payload_A.read();
    }
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_user_V_0_load_A() {
    AXI_video_strm_V_user_V_0_load_A = (AXI_video_strm_V_user_V_0_state_cmp_full.read() & ~AXI_video_strm_V_user_V_0_sel_wr.read());
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_user_V_0_load_B() {
    AXI_video_strm_V_user_V_0_load_B = (AXI_video_strm_V_user_V_0_sel_wr.read() & AXI_video_strm_V_user_V_0_state_cmp_full.read());
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_user_V_0_sel() {
    AXI_video_strm_V_user_V_0_sel = AXI_video_strm_V_user_V_0_sel_rd.read();
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_user_V_0_state_cmp_full() {
    AXI_video_strm_V_user_V_0_state_cmp_full =  (sc_logic) ((!AXI_video_strm_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(AXI_video_strm_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_user_V_0_vld_in() {
    AXI_video_strm_V_user_V_0_vld_in = p_pyrLB0_TVALID.read();
}

void AXIvideo2xfMat86::thread_AXI_video_strm_V_user_V_0_vld_out() {
    AXI_video_strm_V_user_V_0_vld_out = AXI_video_strm_V_user_V_0_state.read()[0];
}

void AXIvideo2xfMat86::thread_add_ln127_fu_333_p2() {
    add_ln127_fu_333_p2 = (!indvars_iv_reg_107.read().is_01() || !ap_const_lv10_280.is_01())? sc_lv<10>(): (sc_biguint<10>(indvars_iv_reg_107.read()) + sc_bigint<10>(ap_const_lv10_280));
}

void AXIvideo2xfMat86::thread_add_ln151_fu_322_p2() {
    add_ln151_fu_322_p2 = (!val_assign_reg_184.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(val_assign_reg_184.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void AXIvideo2xfMat86::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[4];
}

void AXIvideo2xfMat86::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AXIvideo2xfMat86::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AXIvideo2xfMat86::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void AXIvideo2xfMat86::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void AXIvideo2xfMat86::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void AXIvideo2xfMat86::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[6];
}

void AXIvideo2xfMat86::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[7];
}

void AXIvideo2xfMat86::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2xfMat86::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state5.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_full_n.read())));
}

void AXIvideo2xfMat86::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state5.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_full_n.read())));
}

void AXIvideo2xfMat86::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state5.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_full_n.read())));
}

void AXIvideo2xfMat86::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void AXIvideo2xfMat86::thread_ap_block_state5_pp1_stage0_iter0() {
    ap_block_state5_pp1_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state5.read()));
}

void AXIvideo2xfMat86::thread_ap_block_state6_pp1_stage0_iter1() {
    ap_block_state6_pp1_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_full_n.read()));
}

void AXIvideo2xfMat86::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read()));
}

void AXIvideo2xfMat86::thread_ap_condition_535() {
    ap_condition_535 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0));
}

void AXIvideo2xfMat86::thread_ap_condition_pp1_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_fu_307_p2.read())) {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_0;
    }
}

void AXIvideo2xfMat86::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_285_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void AXIvideo2xfMat86::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void AXIvideo2xfMat86::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AXIvideo2xfMat86::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void AXIvideo2xfMat86::thread_ap_phi_mux_axi_data_V_1_phi_fu_176_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()))) {
        ap_phi_mux_axi_data_V_1_phi_fu_176_p4 = p_Val2_s_reg_219.read();
    } else {
        ap_phi_mux_axi_data_V_1_phi_fu_176_p4 = axi_data_V_1_reg_173.read();
    }
}

void AXIvideo2xfMat86::thread_ap_phi_mux_eol_0_phi_fu_198_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()))) {
        ap_phi_mux_eol_0_phi_fu_198_p4 = axi_last_V_2_reg_206.read();
    } else {
        ap_phi_mux_eol_0_phi_fu_198_p4 = eol_0_reg_194.read();
    }
}

void AXIvideo2xfMat86::thread_ap_phi_mux_eol_2_phi_fu_259_p4() {
    ap_phi_mux_eol_2_phi_fu_259_p4 = eol_2_reg_256.read();
}

void AXIvideo2xfMat86::thread_ap_phi_mux_eol_phi_fu_165_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()))) {
        ap_phi_mux_eol_phi_fu_165_p4 = axi_last_V_2_reg_206.read();
    } else {
        ap_phi_mux_eol_phi_fu_165_p4 = eol_reg_162.read();
    }
}

void AXIvideo2xfMat86::thread_ap_phi_reg_pp1_iter0_axi_last_V_2_reg_206() {
    ap_phi_reg_pp1_iter0_axi_last_V_2_reg_206 =  (sc_lv<1>) ("X");
}

void AXIvideo2xfMat86::thread_ap_phi_reg_pp1_iter0_p_Val2_s_reg_219() {
    ap_phi_reg_pp1_iter0_p_Val2_s_reg_219 = "XXXXXXXX";
}

void AXIvideo2xfMat86::thread_ap_predicate_op51_read_state5() {
    ap_predicate_op51_read_state5 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_fu_307_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln132_fu_316_p2.read()));
}

void AXIvideo2xfMat86::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_285_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void AXIvideo2xfMat86::thread_i_fu_291_p2() {
    i_fu_291_p2 = (!i_0_reg_151.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_151.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void AXIvideo2xfMat86::thread_icmp_ln127_fu_285_p2() {
    icmp_ln127_fu_285_p2 = (!i_0_reg_151.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_151.read() == ap_const_lv9_1E0);
}

void AXIvideo2xfMat86::thread_icmp_ln129_fu_307_p2() {
    icmp_ln129_fu_307_p2 = (!trunc_ln129_fu_303_p1.read().is_01() || !indvars_iv_reg_107.read().is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln129_fu_303_p1.read() == indvars_iv_reg_107.read());
}

void AXIvideo2xfMat86::thread_img_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()))) {
        img_data_V_blk_n = img_data_V_full_n.read();
    } else {
        img_data_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2xfMat86::thread_img_data_V_din() {
    img_data_V_din = p_Val2_s_reg_219.read();
}

void AXIvideo2xfMat86::thread_img_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_reg_373.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_V_write = ap_const_logic_1;
    } else {
        img_data_V_write = ap_const_logic_0;
    }
}

void AXIvideo2xfMat86::thread_or_ln132_fu_316_p2() {
    or_ln132_fu_316_p2 = (sof_1_fu_78.read() | ap_phi_mux_eol_0_phi_fu_198_p4.read());
}

void AXIvideo2xfMat86::thread_p_pyrLB0_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_fu_307_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln132_fu_316_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read())))) {
        p_pyrLB0_TDATA_blk_n = AXI_video_strm_V_data_V_0_state.read()[0];
    } else {
        p_pyrLB0_TDATA_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2xfMat86::thread_p_pyrLB0_TREADY() {
    p_pyrLB0_TREADY = AXI_video_strm_V_dest_V_0_state.read()[1];
}

void AXIvideo2xfMat86::thread_tmp_user_V_fu_276_p1() {
    tmp_user_V_fu_276_p1 = AXI_video_strm_V_user_V_0_data_out.read();
}

void AXIvideo2xfMat86::thread_trunc_ln129_fu_303_p1() {
    trunc_ln129_fu_303_p1 = val_assign_reg_184.read().range(10-1, 0);
}

void AXIvideo2xfMat86::thread_val_fu_297_p2() {
    val_fu_297_p2 = (!val_0_reg_139.read().is_01() || !ap_const_lv19_280.is_01())? sc_lv<19>(): (sc_biguint<19>(val_0_reg_139.read()) + sc_biguint<19>(ap_const_lv19_280));
}

void AXIvideo2xfMat86::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(AXI_video_strm_V_data_V_0_vld_out.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_user_V_fu_276_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(AXI_video_strm_V_data_V_0_vld_out.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_user_V_fu_276_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_285_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_fu_307_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_fu_307_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_eol_2_phi_fu_259_p4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

