// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "blendL.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic blendL::ap_const_logic_0 = sc_dt::Log_0;
const bool blendL::ap_const_boolean_1 = true;
const sc_logic blendL::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<8> blendL::ap_const_lv8_0 = "00000000";
const sc_lv<2> blendL::ap_const_lv2_0 = "00";
const sc_lv<2> blendL::ap_const_lv2_1 = "1";

blendL::blendL(sc_module_name name) : sc_module(name), mVcdFile(0) {
    blendL_entry126_U0 = new blendL_entry126("blendL_entry126_U0");
    blendL_entry126_U0->ap_clk(ap_clk);
    blendL_entry126_U0->ap_rst(ap_rst);
    blendL_entry126_U0->ap_start(blendL_entry126_U0_ap_start);
    blendL_entry126_U0->ap_done(blendL_entry126_U0_ap_done);
    blendL_entry126_U0->ap_continue(blendL_entry126_U0_ap_continue);
    blendL_entry126_U0->ap_idle(blendL_entry126_U0_ap_idle);
    blendL_entry126_U0->ap_ready(blendL_entry126_U0_ap_ready);
    blendL_entry126_U0->pyrLA0_rows_dout(pyrLA0_rows_dout);
    blendL_entry126_U0->pyrLA0_rows_empty_n(pyrLA0_rows_empty_n);
    blendL_entry126_U0->pyrLA0_rows_read(blendL_entry126_U0_pyrLA0_rows_read);
    blendL_entry126_U0->pyrLA0_cols_dout(pyrLA0_cols_dout);
    blendL_entry126_U0->pyrLA0_cols_empty_n(pyrLA0_cols_empty_n);
    blendL_entry126_U0->pyrLA0_cols_read(blendL_entry126_U0_pyrLA0_cols_read);
    blendL_entry126_U0->pyrLA1_rows_dout(pyrLA1_rows_dout);
    blendL_entry126_U0->pyrLA1_rows_empty_n(pyrLA1_rows_empty_n);
    blendL_entry126_U0->pyrLA1_rows_read(blendL_entry126_U0_pyrLA1_rows_read);
    blendL_entry126_U0->pyrLA1_cols_dout(pyrLA1_cols_dout);
    blendL_entry126_U0->pyrLA1_cols_empty_n(pyrLA1_cols_empty_n);
    blendL_entry126_U0->pyrLA1_cols_read(blendL_entry126_U0_pyrLA1_cols_read);
    blendL_entry126_U0->pyrLA0_rows_out_din(blendL_entry126_U0_pyrLA0_rows_out_din);
    blendL_entry126_U0->pyrLA0_rows_out_full_n(pyrLA0_rows_c_i_full_n);
    blendL_entry126_U0->pyrLA0_rows_out_write(blendL_entry126_U0_pyrLA0_rows_out_write);
    blendL_entry126_U0->pyrLA0_cols_out_din(blendL_entry126_U0_pyrLA0_cols_out_din);
    blendL_entry126_U0->pyrLA0_cols_out_full_n(pyrLA0_cols_c_i_full_n);
    blendL_entry126_U0->pyrLA0_cols_out_write(blendL_entry126_U0_pyrLA0_cols_out_write);
    blendL_entry126_U0->pyrLA1_rows_out_din(blendL_entry126_U0_pyrLA1_rows_out_din);
    blendL_entry126_U0->pyrLA1_rows_out_full_n(pyrLA1_rows_c_i_full_n);
    blendL_entry126_U0->pyrLA1_rows_out_write(blendL_entry126_U0_pyrLA1_rows_out_write);
    blendL_entry126_U0->pyrLA1_cols_out_din(blendL_entry126_U0_pyrLA1_cols_out_din);
    blendL_entry126_U0->pyrLA1_cols_out_full_n(pyrLA1_cols_c_i_full_n);
    blendL_entry126_U0->pyrLA1_cols_out_write(blendL_entry126_U0_pyrLA1_cols_out_write);
    blendOpt_480_640_83_U0 = new blendOpt_480_640_83("blendOpt_480_640_83_U0");
    blendOpt_480_640_83_U0->imageA_rows_dout(pyrLA0_rows_c_i_dout);
    blendOpt_480_640_83_U0->imageA_rows_empty_n(pyrLA0_rows_c_i_empty_n);
    blendOpt_480_640_83_U0->imageA_rows_read(blendOpt_480_640_83_U0_imageA_rows_read);
    blendOpt_480_640_83_U0->imageA_cols_dout(pyrLA0_cols_c_i_dout);
    blendOpt_480_640_83_U0->imageA_cols_empty_n(pyrLA0_cols_c_i_empty_n);
    blendOpt_480_640_83_U0->imageA_cols_read(blendOpt_480_640_83_U0_imageA_cols_read);
    blendOpt_480_640_83_U0->imageA_data_V_dout(pyrLA0_data_V_dout);
    blendOpt_480_640_83_U0->imageA_data_V_empty_n(pyrLA0_data_V_empty_n);
    blendOpt_480_640_83_U0->imageA_data_V_read(blendOpt_480_640_83_U0_imageA_data_V_read);
    blendOpt_480_640_83_U0->imageB_data_V_dout(pyrLB0_data_V_dout);
    blendOpt_480_640_83_U0->imageB_data_V_empty_n(pyrLB0_data_V_empty_n);
    blendOpt_480_640_83_U0->imageB_data_V_read(blendOpt_480_640_83_U0_imageB_data_V_read);
    blendOpt_480_640_83_U0->imageS_data_V_din(blendOpt_480_640_83_U0_imageS_data_V_din);
    blendOpt_480_640_83_U0->imageS_data_V_full_n(pyrS0_data_V_full_n);
    blendOpt_480_640_83_U0->imageS_data_V_write(blendOpt_480_640_83_U0_imageS_data_V_write);
    blendOpt_480_640_83_U0->ap_clk(ap_clk);
    blendOpt_480_640_83_U0->ap_rst(ap_rst);
    blendOpt_480_640_83_U0->ap_start(blendOpt_480_640_83_U0_ap_start);
    blendOpt_480_640_83_U0->ap_done(blendOpt_480_640_83_U0_ap_done);
    blendOpt_480_640_83_U0->ap_ready(blendOpt_480_640_83_U0_ap_ready);
    blendOpt_480_640_83_U0->ap_idle(blendOpt_480_640_83_U0_ap_idle);
    blendOpt_480_640_83_U0->ap_continue(blendOpt_480_640_83_U0_ap_continue);
    blendOpt_480_640_U0 = new blendOpt_480_640_s("blendOpt_480_640_U0");
    blendOpt_480_640_U0->imageA_rows_dout(pyrLA1_rows_c_i_dout);
    blendOpt_480_640_U0->imageA_rows_empty_n(pyrLA1_rows_c_i_empty_n);
    blendOpt_480_640_U0->imageA_rows_read(blendOpt_480_640_U0_imageA_rows_read);
    blendOpt_480_640_U0->imageA_cols_dout(pyrLA1_cols_c_i_dout);
    blendOpt_480_640_U0->imageA_cols_empty_n(pyrLA1_cols_c_i_empty_n);
    blendOpt_480_640_U0->imageA_cols_read(blendOpt_480_640_U0_imageA_cols_read);
    blendOpt_480_640_U0->imageA_data_V_dout(pyrLA1_data_V_dout);
    blendOpt_480_640_U0->imageA_data_V_empty_n(pyrLA1_data_V_empty_n);
    blendOpt_480_640_U0->imageA_data_V_read(blendOpt_480_640_U0_imageA_data_V_read);
    blendOpt_480_640_U0->imageB_data_V_dout(pyrLB1_data_V_dout);
    blendOpt_480_640_U0->imageB_data_V_empty_n(pyrLB1_data_V_empty_n);
    blendOpt_480_640_U0->imageB_data_V_read(blendOpt_480_640_U0_imageB_data_V_read);
    blendOpt_480_640_U0->imageS_data_V_din(blendOpt_480_640_U0_imageS_data_V_din);
    blendOpt_480_640_U0->imageS_data_V_full_n(pyrS1_data_V_full_n);
    blendOpt_480_640_U0->imageS_data_V_write(blendOpt_480_640_U0_imageS_data_V_write);
    blendOpt_480_640_U0->ap_clk(ap_clk);
    blendOpt_480_640_U0->ap_rst(ap_rst);
    blendOpt_480_640_U0->ap_start(blendOpt_480_640_U0_ap_start);
    blendOpt_480_640_U0->ap_done(blendOpt_480_640_U0_ap_done);
    blendOpt_480_640_U0->ap_ready(blendOpt_480_640_U0_ap_ready);
    blendOpt_480_640_U0->ap_idle(blendOpt_480_640_U0_ap_idle);
    blendOpt_480_640_U0->ap_continue(blendOpt_480_640_U0_ap_continue);
    pyrLA0_rows_c_i_U = new fifo_w10_d2_A_x0("pyrLA0_rows_c_i_U");
    pyrLA0_rows_c_i_U->clk(ap_clk);
    pyrLA0_rows_c_i_U->reset(ap_rst);
    pyrLA0_rows_c_i_U->if_read_ce(ap_var_for_const0);
    pyrLA0_rows_c_i_U->if_write_ce(ap_var_for_const0);
    pyrLA0_rows_c_i_U->if_din(blendL_entry126_U0_pyrLA0_rows_out_din);
    pyrLA0_rows_c_i_U->if_full_n(pyrLA0_rows_c_i_full_n);
    pyrLA0_rows_c_i_U->if_write(blendL_entry126_U0_pyrLA0_rows_out_write);
    pyrLA0_rows_c_i_U->if_dout(pyrLA0_rows_c_i_dout);
    pyrLA0_rows_c_i_U->if_empty_n(pyrLA0_rows_c_i_empty_n);
    pyrLA0_rows_c_i_U->if_read(blendOpt_480_640_83_U0_imageA_rows_read);
    pyrLA0_cols_c_i_U = new fifo_w11_d2_A_x("pyrLA0_cols_c_i_U");
    pyrLA0_cols_c_i_U->clk(ap_clk);
    pyrLA0_cols_c_i_U->reset(ap_rst);
    pyrLA0_cols_c_i_U->if_read_ce(ap_var_for_const0);
    pyrLA0_cols_c_i_U->if_write_ce(ap_var_for_const0);
    pyrLA0_cols_c_i_U->if_din(blendL_entry126_U0_pyrLA0_cols_out_din);
    pyrLA0_cols_c_i_U->if_full_n(pyrLA0_cols_c_i_full_n);
    pyrLA0_cols_c_i_U->if_write(blendL_entry126_U0_pyrLA0_cols_out_write);
    pyrLA0_cols_c_i_U->if_dout(pyrLA0_cols_c_i_dout);
    pyrLA0_cols_c_i_U->if_empty_n(pyrLA0_cols_c_i_empty_n);
    pyrLA0_cols_c_i_U->if_read(blendOpt_480_640_83_U0_imageA_cols_read);
    pyrLA1_rows_c_i_U = new fifo_w9_d2_A_x("pyrLA1_rows_c_i_U");
    pyrLA1_rows_c_i_U->clk(ap_clk);
    pyrLA1_rows_c_i_U->reset(ap_rst);
    pyrLA1_rows_c_i_U->if_read_ce(ap_var_for_const0);
    pyrLA1_rows_c_i_U->if_write_ce(ap_var_for_const0);
    pyrLA1_rows_c_i_U->if_din(blendL_entry126_U0_pyrLA1_rows_out_din);
    pyrLA1_rows_c_i_U->if_full_n(pyrLA1_rows_c_i_full_n);
    pyrLA1_rows_c_i_U->if_write(blendL_entry126_U0_pyrLA1_rows_out_write);
    pyrLA1_rows_c_i_U->if_dout(pyrLA1_rows_c_i_dout);
    pyrLA1_rows_c_i_U->if_empty_n(pyrLA1_rows_c_i_empty_n);
    pyrLA1_rows_c_i_U->if_read(blendOpt_480_640_U0_imageA_rows_read);
    pyrLA1_cols_c_i_U = new fifo_w10_d2_A_x0("pyrLA1_cols_c_i_U");
    pyrLA1_cols_c_i_U->clk(ap_clk);
    pyrLA1_cols_c_i_U->reset(ap_rst);
    pyrLA1_cols_c_i_U->if_read_ce(ap_var_for_const0);
    pyrLA1_cols_c_i_U->if_write_ce(ap_var_for_const0);
    pyrLA1_cols_c_i_U->if_din(blendL_entry126_U0_pyrLA1_cols_out_din);
    pyrLA1_cols_c_i_U->if_full_n(pyrLA1_cols_c_i_full_n);
    pyrLA1_cols_c_i_U->if_write(blendL_entry126_U0_pyrLA1_cols_out_write);
    pyrLA1_cols_c_i_U->if_dout(pyrLA1_cols_c_i_dout);
    pyrLA1_cols_c_i_U->if_empty_n(pyrLA1_cols_c_i_empty_n);
    pyrLA1_cols_c_i_U->if_read(blendOpt_480_640_U0_imageA_cols_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sync_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( blendL_entry126_U0_ap_idle );
    sensitive << ( blendOpt_480_640_83_U0_ap_idle );
    sensitive << ( blendOpt_480_640_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ap_sync_blendL_entry126_U0_ap_ready);
    sensitive << ( blendL_entry126_U0_ap_ready );
    sensitive << ( ap_sync_reg_blendL_entry126_U0_ap_ready );

    SC_METHOD(thread_ap_sync_blendOpt_480_640_83_U0_ap_ready);
    sensitive << ( blendOpt_480_640_83_U0_ap_ready );
    sensitive << ( ap_sync_reg_blendOpt_480_640_83_U0_ap_ready );

    SC_METHOD(thread_ap_sync_blendOpt_480_640_U0_ap_ready);
    sensitive << ( blendOpt_480_640_U0_ap_ready );
    sensitive << ( ap_sync_reg_blendOpt_480_640_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_sync_done );
    sensitive << ( ap_continue );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( blendOpt_480_640_83_U0_ap_done );
    sensitive << ( blendOpt_480_640_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_blendL_entry126_U0_ap_ready );
    sensitive << ( ap_sync_blendOpt_480_640_83_U0_ap_ready );
    sensitive << ( ap_sync_blendOpt_480_640_U0_ap_ready );

    SC_METHOD(thread_blendL_entry126_U0_ap_continue);

    SC_METHOD(thread_blendL_entry126_U0_ap_start);
    sensitive << ( real_start );
    sensitive << ( ap_sync_reg_blendL_entry126_U0_ap_ready );

    SC_METHOD(thread_blendL_entry126_U0_start_full_n);

    SC_METHOD(thread_blendL_entry126_U0_start_write);

    SC_METHOD(thread_blendOpt_480_640_83_U0_ap_continue);
    sensitive << ( ap_sync_continue );

    SC_METHOD(thread_blendOpt_480_640_83_U0_ap_start);
    sensitive << ( real_start );
    sensitive << ( ap_sync_reg_blendOpt_480_640_83_U0_ap_ready );

    SC_METHOD(thread_blendOpt_480_640_83_U0_start_full_n);

    SC_METHOD(thread_blendOpt_480_640_83_U0_start_write);

    SC_METHOD(thread_blendOpt_480_640_U0_ap_continue);
    sensitive << ( ap_sync_continue );

    SC_METHOD(thread_blendOpt_480_640_U0_ap_start);
    sensitive << ( real_start );
    sensitive << ( ap_sync_reg_blendOpt_480_640_U0_ap_ready );

    SC_METHOD(thread_blendOpt_480_640_U0_start_full_n);

    SC_METHOD(thread_blendOpt_480_640_U0_start_write);

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_pyrLA0_cols_read);
    sensitive << ( blendL_entry126_U0_pyrLA0_cols_read );

    SC_METHOD(thread_pyrLA0_data_V_read);
    sensitive << ( blendOpt_480_640_83_U0_imageA_data_V_read );

    SC_METHOD(thread_pyrLA0_rows_read);
    sensitive << ( blendL_entry126_U0_pyrLA0_rows_read );

    SC_METHOD(thread_pyrLA1_cols_read);
    sensitive << ( blendL_entry126_U0_pyrLA1_cols_read );

    SC_METHOD(thread_pyrLA1_data_V_read);
    sensitive << ( blendOpt_480_640_U0_imageA_data_V_read );

    SC_METHOD(thread_pyrLA1_rows_read);
    sensitive << ( blendL_entry126_U0_pyrLA1_rows_read );

    SC_METHOD(thread_pyrLB0_data_V_read);
    sensitive << ( blendOpt_480_640_83_U0_imageB_data_V_read );

    SC_METHOD(thread_pyrLB1_data_V_read);
    sensitive << ( blendOpt_480_640_U0_imageB_data_V_read );

    SC_METHOD(thread_pyrS0_data_V_din);
    sensitive << ( blendOpt_480_640_83_U0_imageS_data_V_din );

    SC_METHOD(thread_pyrS0_data_V_write);
    sensitive << ( blendOpt_480_640_83_U0_imageS_data_V_write );

    SC_METHOD(thread_pyrS1_data_V_din);
    sensitive << ( blendOpt_480_640_U0_imageS_data_V_din );

    SC_METHOD(thread_pyrS1_data_V_write);
    sensitive << ( blendOpt_480_640_U0_imageS_data_V_write );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_THREAD(thread_ap_var_for_const0);

    start_once_reg = SC_LOGIC_0;
    ap_sync_reg_blendL_entry126_U0_ap_ready = SC_LOGIC_0;
    blendL_entry126_U0_ap_ready_count = "00";
    ap_sync_reg_blendOpt_480_640_83_U0_ap_ready = SC_LOGIC_0;
    blendOpt_480_640_83_U0_ap_ready_count = "00";
    ap_sync_reg_blendOpt_480_640_U0_ap_ready = SC_LOGIC_0;
    blendOpt_480_640_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "blendL_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, pyrLA0_rows_dout, "(port)pyrLA0_rows_dout");
    sc_trace(mVcdFile, pyrLA0_rows_empty_n, "(port)pyrLA0_rows_empty_n");
    sc_trace(mVcdFile, pyrLA0_rows_read, "(port)pyrLA0_rows_read");
    sc_trace(mVcdFile, pyrLA0_cols_dout, "(port)pyrLA0_cols_dout");
    sc_trace(mVcdFile, pyrLA0_cols_empty_n, "(port)pyrLA0_cols_empty_n");
    sc_trace(mVcdFile, pyrLA0_cols_read, "(port)pyrLA0_cols_read");
    sc_trace(mVcdFile, pyrLA0_data_V_dout, "(port)pyrLA0_data_V_dout");
    sc_trace(mVcdFile, pyrLA0_data_V_empty_n, "(port)pyrLA0_data_V_empty_n");
    sc_trace(mVcdFile, pyrLA0_data_V_read, "(port)pyrLA0_data_V_read");
    sc_trace(mVcdFile, pyrLA1_rows_dout, "(port)pyrLA1_rows_dout");
    sc_trace(mVcdFile, pyrLA1_rows_empty_n, "(port)pyrLA1_rows_empty_n");
    sc_trace(mVcdFile, pyrLA1_rows_read, "(port)pyrLA1_rows_read");
    sc_trace(mVcdFile, pyrLA1_cols_dout, "(port)pyrLA1_cols_dout");
    sc_trace(mVcdFile, pyrLA1_cols_empty_n, "(port)pyrLA1_cols_empty_n");
    sc_trace(mVcdFile, pyrLA1_cols_read, "(port)pyrLA1_cols_read");
    sc_trace(mVcdFile, pyrLA1_data_V_dout, "(port)pyrLA1_data_V_dout");
    sc_trace(mVcdFile, pyrLA1_data_V_empty_n, "(port)pyrLA1_data_V_empty_n");
    sc_trace(mVcdFile, pyrLA1_data_V_read, "(port)pyrLA1_data_V_read");
    sc_trace(mVcdFile, pyrLB0_data_V_dout, "(port)pyrLB0_data_V_dout");
    sc_trace(mVcdFile, pyrLB0_data_V_empty_n, "(port)pyrLB0_data_V_empty_n");
    sc_trace(mVcdFile, pyrLB0_data_V_read, "(port)pyrLB0_data_V_read");
    sc_trace(mVcdFile, pyrLB1_data_V_dout, "(port)pyrLB1_data_V_dout");
    sc_trace(mVcdFile, pyrLB1_data_V_empty_n, "(port)pyrLB1_data_V_empty_n");
    sc_trace(mVcdFile, pyrLB1_data_V_read, "(port)pyrLB1_data_V_read");
    sc_trace(mVcdFile, pyrS0_data_V_din, "(port)pyrS0_data_V_din");
    sc_trace(mVcdFile, pyrS0_data_V_full_n, "(port)pyrS0_data_V_full_n");
    sc_trace(mVcdFile, pyrS0_data_V_write, "(port)pyrS0_data_V_write");
    sc_trace(mVcdFile, pyrS1_data_V_din, "(port)pyrS1_data_V_din");
    sc_trace(mVcdFile, pyrS1_data_V_full_n, "(port)pyrS1_data_V_full_n");
    sc_trace(mVcdFile, pyrS1_data_V_write, "(port)pyrS1_data_V_write");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, blendL_entry126_U0_ap_start, "blendL_entry126_U0_ap_start");
    sc_trace(mVcdFile, blendL_entry126_U0_ap_done, "blendL_entry126_U0_ap_done");
    sc_trace(mVcdFile, blendL_entry126_U0_ap_continue, "blendL_entry126_U0_ap_continue");
    sc_trace(mVcdFile, blendL_entry126_U0_ap_idle, "blendL_entry126_U0_ap_idle");
    sc_trace(mVcdFile, blendL_entry126_U0_ap_ready, "blendL_entry126_U0_ap_ready");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA0_rows_read, "blendL_entry126_U0_pyrLA0_rows_read");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA0_cols_read, "blendL_entry126_U0_pyrLA0_cols_read");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA1_rows_read, "blendL_entry126_U0_pyrLA1_rows_read");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA1_cols_read, "blendL_entry126_U0_pyrLA1_cols_read");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA0_rows_out_din, "blendL_entry126_U0_pyrLA0_rows_out_din");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA0_rows_out_write, "blendL_entry126_U0_pyrLA0_rows_out_write");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA0_cols_out_din, "blendL_entry126_U0_pyrLA0_cols_out_din");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA0_cols_out_write, "blendL_entry126_U0_pyrLA0_cols_out_write");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA1_rows_out_din, "blendL_entry126_U0_pyrLA1_rows_out_din");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA1_rows_out_write, "blendL_entry126_U0_pyrLA1_rows_out_write");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA1_cols_out_din, "blendL_entry126_U0_pyrLA1_cols_out_din");
    sc_trace(mVcdFile, blendL_entry126_U0_pyrLA1_cols_out_write, "blendL_entry126_U0_pyrLA1_cols_out_write");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_imageA_rows_read, "blendOpt_480_640_83_U0_imageA_rows_read");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_imageA_cols_read, "blendOpt_480_640_83_U0_imageA_cols_read");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_imageA_data_V_read, "blendOpt_480_640_83_U0_imageA_data_V_read");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_imageB_data_V_read, "blendOpt_480_640_83_U0_imageB_data_V_read");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_imageS_data_V_din, "blendOpt_480_640_83_U0_imageS_data_V_din");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_imageS_data_V_write, "blendOpt_480_640_83_U0_imageS_data_V_write");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_ap_start, "blendOpt_480_640_83_U0_ap_start");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_ap_done, "blendOpt_480_640_83_U0_ap_done");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_ap_ready, "blendOpt_480_640_83_U0_ap_ready");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_ap_idle, "blendOpt_480_640_83_U0_ap_idle");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_ap_continue, "blendOpt_480_640_83_U0_ap_continue");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, blendOpt_480_640_U0_imageA_rows_read, "blendOpt_480_640_U0_imageA_rows_read");
    sc_trace(mVcdFile, blendOpt_480_640_U0_imageA_cols_read, "blendOpt_480_640_U0_imageA_cols_read");
    sc_trace(mVcdFile, blendOpt_480_640_U0_imageA_data_V_read, "blendOpt_480_640_U0_imageA_data_V_read");
    sc_trace(mVcdFile, blendOpt_480_640_U0_imageB_data_V_read, "blendOpt_480_640_U0_imageB_data_V_read");
    sc_trace(mVcdFile, blendOpt_480_640_U0_imageS_data_V_din, "blendOpt_480_640_U0_imageS_data_V_din");
    sc_trace(mVcdFile, blendOpt_480_640_U0_imageS_data_V_write, "blendOpt_480_640_U0_imageS_data_V_write");
    sc_trace(mVcdFile, blendOpt_480_640_U0_ap_start, "blendOpt_480_640_U0_ap_start");
    sc_trace(mVcdFile, blendOpt_480_640_U0_ap_done, "blendOpt_480_640_U0_ap_done");
    sc_trace(mVcdFile, blendOpt_480_640_U0_ap_ready, "blendOpt_480_640_U0_ap_ready");
    sc_trace(mVcdFile, blendOpt_480_640_U0_ap_idle, "blendOpt_480_640_U0_ap_idle");
    sc_trace(mVcdFile, blendOpt_480_640_U0_ap_continue, "blendOpt_480_640_U0_ap_continue");
    sc_trace(mVcdFile, pyrLA0_rows_c_i_full_n, "pyrLA0_rows_c_i_full_n");
    sc_trace(mVcdFile, pyrLA0_rows_c_i_dout, "pyrLA0_rows_c_i_dout");
    sc_trace(mVcdFile, pyrLA0_rows_c_i_empty_n, "pyrLA0_rows_c_i_empty_n");
    sc_trace(mVcdFile, pyrLA0_cols_c_i_full_n, "pyrLA0_cols_c_i_full_n");
    sc_trace(mVcdFile, pyrLA0_cols_c_i_dout, "pyrLA0_cols_c_i_dout");
    sc_trace(mVcdFile, pyrLA0_cols_c_i_empty_n, "pyrLA0_cols_c_i_empty_n");
    sc_trace(mVcdFile, pyrLA1_rows_c_i_full_n, "pyrLA1_rows_c_i_full_n");
    sc_trace(mVcdFile, pyrLA1_rows_c_i_dout, "pyrLA1_rows_c_i_dout");
    sc_trace(mVcdFile, pyrLA1_rows_c_i_empty_n, "pyrLA1_rows_c_i_empty_n");
    sc_trace(mVcdFile, pyrLA1_cols_c_i_full_n, "pyrLA1_cols_c_i_full_n");
    sc_trace(mVcdFile, pyrLA1_cols_c_i_dout, "pyrLA1_cols_c_i_dout");
    sc_trace(mVcdFile, pyrLA1_cols_c_i_empty_n, "pyrLA1_cols_c_i_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_blendL_entry126_U0_ap_ready, "ap_sync_reg_blendL_entry126_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_blendL_entry126_U0_ap_ready, "ap_sync_blendL_entry126_U0_ap_ready");
    sc_trace(mVcdFile, blendL_entry126_U0_ap_ready_count, "blendL_entry126_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_blendOpt_480_640_83_U0_ap_ready, "ap_sync_reg_blendOpt_480_640_83_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_blendOpt_480_640_83_U0_ap_ready, "ap_sync_blendOpt_480_640_83_U0_ap_ready");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_ap_ready_count, "blendOpt_480_640_83_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_blendOpt_480_640_U0_ap_ready, "ap_sync_reg_blendOpt_480_640_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_blendOpt_480_640_U0_ap_ready, "ap_sync_blendOpt_480_640_U0_ap_ready");
    sc_trace(mVcdFile, blendOpt_480_640_U0_ap_ready_count, "blendOpt_480_640_U0_ap_ready_count");
    sc_trace(mVcdFile, blendL_entry126_U0_start_full_n, "blendL_entry126_U0_start_full_n");
    sc_trace(mVcdFile, blendL_entry126_U0_start_write, "blendL_entry126_U0_start_write");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_start_full_n, "blendOpt_480_640_83_U0_start_full_n");
    sc_trace(mVcdFile, blendOpt_480_640_83_U0_start_write, "blendOpt_480_640_83_U0_start_write");
    sc_trace(mVcdFile, blendOpt_480_640_U0_start_full_n, "blendOpt_480_640_U0_start_full_n");
    sc_trace(mVcdFile, blendOpt_480_640_U0_start_write, "blendOpt_480_640_U0_start_write");
#endif

    }
}

blendL::~blendL() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete blendL_entry126_U0;
    delete blendOpt_480_640_83_U0;
    delete blendOpt_480_640_U0;
    delete pyrLA0_rows_c_i_U;
    delete pyrLA0_cols_c_i_U;
    delete pyrLA1_rows_c_i_U;
    delete pyrLA1_cols_c_i_U;
}

void blendL::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void blendL::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_blendL_entry126_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (real_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_blendL_entry126_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_blendL_entry126_U0_ap_ready = ap_sync_blendL_entry126_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_blendOpt_480_640_83_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (real_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_blendOpt_480_640_83_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_blendOpt_480_640_83_U0_ap_ready = ap_sync_blendOpt_480_640_83_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_blendOpt_480_640_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (real_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_blendOpt_480_640_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_blendOpt_480_640_U0_ap_ready = ap_sync_blendOpt_480_640_U0_ap_ready.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_0, blendL_entry126_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        blendL_entry126_U0_ap_ready_count = (!blendL_entry126_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(blendL_entry126_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, blendL_entry126_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        blendL_entry126_U0_ap_ready_count = (!blendL_entry126_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(blendL_entry126_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, blendOpt_480_640_83_U0_ap_ready.read()))) {
        blendOpt_480_640_83_U0_ap_ready_count = (!blendOpt_480_640_83_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(blendOpt_480_640_83_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, blendOpt_480_640_83_U0_ap_ready.read()))) {
        blendOpt_480_640_83_U0_ap_ready_count = (!blendOpt_480_640_83_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(blendOpt_480_640_83_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, blendOpt_480_640_U0_ap_ready.read()))) {
        blendOpt_480_640_U0_ap_ready_count = (!blendOpt_480_640_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(blendOpt_480_640_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, blendOpt_480_640_U0_ap_ready.read()))) {
        blendOpt_480_640_U0_ap_ready_count = (!blendOpt_480_640_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(blendOpt_480_640_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(internal_ap_ready.read(), ap_const_logic_1)) {
            start_once_reg = ap_const_logic_0;
        }
    }
}

void blendL::thread_ap_done() {
    ap_done = ap_sync_done.read();
}

void blendL::thread_ap_idle() {
    ap_idle = (blendL_entry126_U0_ap_idle.read() & blendOpt_480_640_83_U0_ap_idle.read() & blendOpt_480_640_U0_ap_idle.read());
}

void blendL::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void blendL::thread_ap_sync_blendL_entry126_U0_ap_ready() {
    ap_sync_blendL_entry126_U0_ap_ready = (blendL_entry126_U0_ap_ready.read() | ap_sync_reg_blendL_entry126_U0_ap_ready.read());
}

void blendL::thread_ap_sync_blendOpt_480_640_83_U0_ap_ready() {
    ap_sync_blendOpt_480_640_83_U0_ap_ready = (blendOpt_480_640_83_U0_ap_ready.read() | ap_sync_reg_blendOpt_480_640_83_U0_ap_ready.read());
}

void blendL::thread_ap_sync_blendOpt_480_640_U0_ap_ready() {
    ap_sync_blendOpt_480_640_U0_ap_ready = (blendOpt_480_640_U0_ap_ready.read() | ap_sync_reg_blendOpt_480_640_U0_ap_ready.read());
}

void blendL::thread_ap_sync_continue() {
    ap_sync_continue = (ap_sync_done.read() & ap_continue.read());
}

void blendL::thread_ap_sync_done() {
    ap_sync_done = (blendOpt_480_640_83_U0_ap_done.read() & blendOpt_480_640_U0_ap_done.read());
}

void blendL::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_blendL_entry126_U0_ap_ready.read() & ap_sync_blendOpt_480_640_83_U0_ap_ready.read() & ap_sync_blendOpt_480_640_U0_ap_ready.read());
}

void blendL::thread_blendL_entry126_U0_ap_continue() {
    blendL_entry126_U0_ap_continue = ap_const_logic_1;
}

void blendL::thread_blendL_entry126_U0_ap_start() {
    blendL_entry126_U0_ap_start = (real_start.read() & (ap_sync_reg_blendL_entry126_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void blendL::thread_blendL_entry126_U0_start_full_n() {
    blendL_entry126_U0_start_full_n = ap_const_logic_1;
}

void blendL::thread_blendL_entry126_U0_start_write() {
    blendL_entry126_U0_start_write = ap_const_logic_0;
}

void blendL::thread_blendOpt_480_640_83_U0_ap_continue() {
    blendOpt_480_640_83_U0_ap_continue = ap_sync_continue.read();
}

void blendL::thread_blendOpt_480_640_83_U0_ap_start() {
    blendOpt_480_640_83_U0_ap_start = (real_start.read() & (ap_sync_reg_blendOpt_480_640_83_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void blendL::thread_blendOpt_480_640_83_U0_start_full_n() {
    blendOpt_480_640_83_U0_start_full_n = ap_const_logic_1;
}

void blendL::thread_blendOpt_480_640_83_U0_start_write() {
    blendOpt_480_640_83_U0_start_write = ap_const_logic_0;
}

void blendL::thread_blendOpt_480_640_U0_ap_continue() {
    blendOpt_480_640_U0_ap_continue = ap_sync_continue.read();
}

void blendL::thread_blendOpt_480_640_U0_ap_start() {
    blendOpt_480_640_U0_ap_start = (real_start.read() & (ap_sync_reg_blendOpt_480_640_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void blendL::thread_blendOpt_480_640_U0_start_full_n() {
    blendOpt_480_640_U0_start_full_n = ap_const_logic_1;
}

void blendL::thread_blendOpt_480_640_U0_start_write() {
    blendOpt_480_640_U0_start_write = ap_const_logic_0;
}

void blendL::thread_internal_ap_ready() {
    internal_ap_ready = ap_sync_ready.read();
}

void blendL::thread_pyrLA0_cols_read() {
    pyrLA0_cols_read = blendL_entry126_U0_pyrLA0_cols_read.read();
}

void blendL::thread_pyrLA0_data_V_read() {
    pyrLA0_data_V_read = blendOpt_480_640_83_U0_imageA_data_V_read.read();
}

void blendL::thread_pyrLA0_rows_read() {
    pyrLA0_rows_read = blendL_entry126_U0_pyrLA0_rows_read.read();
}

void blendL::thread_pyrLA1_cols_read() {
    pyrLA1_cols_read = blendL_entry126_U0_pyrLA1_cols_read.read();
}

void blendL::thread_pyrLA1_data_V_read() {
    pyrLA1_data_V_read = blendOpt_480_640_U0_imageA_data_V_read.read();
}

void blendL::thread_pyrLA1_rows_read() {
    pyrLA1_rows_read = blendL_entry126_U0_pyrLA1_rows_read.read();
}

void blendL::thread_pyrLB0_data_V_read() {
    pyrLB0_data_V_read = blendOpt_480_640_83_U0_imageB_data_V_read.read();
}

void blendL::thread_pyrLB1_data_V_read() {
    pyrLB1_data_V_read = blendOpt_480_640_U0_imageB_data_V_read.read();
}

void blendL::thread_pyrS0_data_V_din() {
    pyrS0_data_V_din = blendOpt_480_640_83_U0_imageS_data_V_din.read();
}

void blendL::thread_pyrS0_data_V_write() {
    pyrS0_data_V_write = blendOpt_480_640_83_U0_imageS_data_V_write.read();
}

void blendL::thread_pyrS1_data_V_din() {
    pyrS1_data_V_din = blendOpt_480_640_U0_imageS_data_V_din.read();
}

void blendL::thread_pyrS1_data_V_write() {
    pyrS1_data_V_write = blendOpt_480_640_U0_imageS_data_V_write.read();
}

void blendL::thread_real_start() {
    if ((esl_seteq<1,1,1>(start_full_n.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void blendL::thread_start_out() {
    start_out = real_start.read();
}

void blendL::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(real_start.read(), ap_const_logic_1))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

}

